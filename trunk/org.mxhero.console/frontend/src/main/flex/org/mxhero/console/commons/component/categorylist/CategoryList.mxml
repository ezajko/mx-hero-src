<?xml version="1.0" encoding="utf-8"?>
<!--
mxHero is a platform that intends to provide a single point of development 
and single point of distribution for email solutions and enhancements. It does this
by providing an extensible framework for rapid development and deployment of
email solutions.

Copyright (C) 2012  mxHero Inc.

This program is free software: you can redistribute it and/or modify
it under the terms of the GNU General Public License as published by
the Free Software Foundation, either version 3 of the License, or
(at your option) any later version.

This program is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU General Public License for more details.

You should have received a copy of the GNU General Public License
along with this program.  If not, see <http://www.gnu.org/licenses/>.
-->
<s:Scroller xmlns:fx="http://ns.adobe.com/mxml/2009" 
		 xmlns:s="library://ns.adobe.com/flex/spark" 
		 xmlns:mx="library://ns.adobe.com/flex/mx"
		 width="100%" 
		 xmlns:categorylist="org.mxhero.console.commons.component.categorylist.*">
	<fx:Declarations>
		<!-- Place non-visual elements (e.g., services, value objects) here -->
	</fx:Declarations>
	
	<fx:Script>
		<![CDATA[
			import mx.collections.ArrayCollection;
			import mx.controls.HRule;
			import mx.controls.SWFLoader;
			import mx.events.ResizeEvent;
			
			[Bindable]
			public var model:CategoryListPM= new CategoryListPM();
			
			private var _categoryList:Object;

			public function get clickHandler():Function{
				return model.clickHandler;
			}
	
			public function set clickHandler(value:Function):void{
				model.clickHandler=value;
			}
			
			[Bindable]
			public function get defaultTitle():String{
				return model.defaultTitle;
			}
			
			public function set defaultTitle(value:String):void{
				model.defaultTitle=value;
				invalidateDisplayList();
			}
			
			[Bindable]
			public function get defaultDescription():String{
				return model.defaultDescription;
			}
			
			public function set defaultDescription(value:String):void{
				model.defaultDescription=value;
			}
			
			[Bindable]
			public function get columnsWidth():Number{
				return model.columnsWidth;
			}
			
			public function get titleLabelFunction():Function{
				return this.model.titleLabelFunction;
			}
			
			public function set titleLabelFunction(value:Function):void{
				if(value!=null){
					this.model.titleLabelFunction=value;
				}
			}
			
			public function set columnsWidth(value:Number):void{
				model.columnsWidth = value;
			}
			
			[Bindable]
			public function get categoryList():Object
			{
				return _categoryList;
			}

			public function set categoryList(value:Object):void
			{
				_categoryList = value;
				loadAllCategoriesImages();
			}

			private function initCategories(event:*=null):void{
				var hrule:HRule;
				innerGroup.removeAllElements();
				model.categoriesUI.removeAll();
				
				if(_categoryList!=null){
					for each(var category:Object in _categoryList){
						var newCategoryRow:CategoryRow= new CategoryRow();
						newCategoryRow.model=model;
						newCategoryRow.category=category;
						innerGroup.addElement(newCategoryRow);
						model.categoriesUI.addItem(newCategoryRow.categoryContainer);
						hrule = new HRule();
						hrule.percentWidth=100;
						hrule.height=3;
						hrule.setStyle("strokeColor",0x70B2EE);
						innerGroup.addElement(hrule);
					}
				}
				innerGroup.removeElementAt(innerGroup.numElements-1);
			}
			
			
			private function loadAllCategoriesImages():void{
				for each(var category:Object in _categoryList){
					if(category.iconsrc is String){
						var loader:SWFLoader = new SWFLoader();
						loader.load(category.iconsrc);
					}
				}
				this.callLater(initCategories);
				this.callLater(validateSize,[true]);
			}
			
			
			public function get orderChilds():Boolean
			{
				return model.orderChilds;
			}

			public function set orderChilds(value:Boolean):void
			{
				model.orderChilds = value;
			}

		]]>
	</fx:Script>

	<s:Group id="groupContainer" width="100%" height="100%">
		<s:layout>
			<s:VerticalLayout gap="10" paddingLeft="10" paddingRight="10" paddingBottom="10" paddingTop="10"/>
		</s:layout>
		<categorylist:CategoryListTitle width="100%" model="{this.model}"/>
		<s:Group id="innerGroup" width="100%" height="100%">
			<s:layout>
				<s:VerticalLayout gap="10" paddingLeft="0" paddingRight="0" paddingBottom="0" paddingTop="0"/>
			</s:layout>
		</s:Group>
	</s:Group>
</s:Scroller>
