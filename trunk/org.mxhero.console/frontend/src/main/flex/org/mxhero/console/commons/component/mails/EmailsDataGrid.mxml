<?xml version="1.0" encoding="utf-8"?>
<s:DataGrid xmlns:fx="http://ns.adobe.com/mxml/2009" 
			 xmlns:s="library://ns.adobe.com/flex/spark" 
			 xmlns:mx="library://ns.adobe.com/flex/mx"
			 width="100%" 
			 borderColor="0x336699"
			 height="100%" xmlns:component="org.mxhero.console.commons.feature.component.*" 
			 xmlns:parsley="http://www.spicefactory.org/parsley">
	
	<fx:Declarations>
		<parsley:Configure/>
		<mx:DateFormatter id="creationDateFormatter"/>
		
		<mx:DateFormatter id="creationHourFormatter"
						  formatString="JJ:NN:SS"
						  />
	</fx:Declarations>
	
	<fx:Script>
		<![CDATA[
			import mx.collections.ArrayCollection;
			
			import org.mxhero.console.commons.component.mails.EmailsDataGridProperties;
			import org.mxhero.console.frontend.application.event.GetRecordStatsEvent;
			
			[MessageDispatcher]
			public var dispatcher:Function;
			
			[Bindable]
			public var emailWindow:ShowEmail
			
			[CommandResult]
			public function getRecordStatsResult (result:*, event:GetRecordStatsEvent) : void {
				emailWindow.stats=result;
			}
			
			protected function dateLabelFunction(item:Object,column:GridColumn):String{
				return creationDateFormatter.format(item.insertDate)+" "+creationHourFormatter.format(item.insertDate);
			}
		]]>
	</fx:Script>
	
	<s:columns>	
		<s:ArrayList>
			<s:GridColumn width="36" sortable="false" resizable="false" >
				<s:itemRenderer>
					<fx:Component>
						<s:GridItemRenderer width="100%">
							<s:layout>
								<s:VerticalLayout horizontalAlign="center" verticalAlign="middle"/>
							</s:layout>
							<fx:Script>
								<![CDATA[
									import mx.resources.IResourceManager;
									import mx.resources.ResourceManager;
									
									import org.mxhero.console.commons.component.mails.CommonsImages;
									import org.mxhero.console.commons.component.mails.EmailsDataGridProperties;
									
									[Bindable]
									private var rm:IResourceManager = ResourceManager.getInstance();
									
								]]>
							</fx:Script>
							<s:Group>
								<s:layout>
									<s:BasicLayout/>
								</s:layout>
								<mx:Image 	visible="{data.state=='deliver'}"
											source="{CommonsImages.DELIVERED}" 
											buttonMode="false"
											toolTip="{rm.getString(EmailsDataGridProperties.NAME,EmailsDataGridProperties.DELIVERED_TOOLTIP)}"/>
								<mx:Image 	visible="{data.state=='redirect'}"
											source="{CommonsImages.REDIRECTED}" 
											buttonMode="false"
											toolTip="{rm.getString(EmailsDataGridProperties.NAME,EmailsDataGridProperties.REDIRECTED_TOOLTIP)}"/>
								<mx:Image 	visible="{data.state=='drop'}"
											source="{CommonsImages.DROPPED}"
											buttonMode="false"
											toolTip="{rm.getString(EmailsDataGridProperties.NAME,EmailsDataGridProperties.DROPPED_TOOLTIP_START)}"/>						
								
							</s:Group>
						</s:GridItemRenderer>
					</fx:Component>
			</s:itemRenderer>
		</s:GridColumn>							
					<s:GridColumn dataField="insertDate" 
								  headerText="{resourceManager.getString(EmailsDataGridProperties.NAME,EmailsDataGridProperties.EMAIL_DATE_LABEL)}" 
									   labelFunction="dateLabelFunction"/>
					<s:GridColumn dataField="from" headerText="{resourceManager.getString(EmailsDataGridProperties.NAME,EmailsDataGridProperties.EMAIL_FROM_LABEL)}"/>
					<s:GridColumn dataField="recipient" headerText="{resourceManager.getString(EmailsDataGridProperties.NAME,EmailsDataGridProperties.EMAIL_TO_LABEL)}"/>
					<s:GridColumn dataField="subject" headerText="{resourceManager.getString(EmailsDataGridProperties.NAME,EmailsDataGridProperties.EMAIL_SUBJECT_LABEL)}"/>
					<s:GridColumn width="70" sortable="false" resizable="false" >
						<s:itemRenderer>
							<fx:Component>
								<s:GridItemRenderer minHeight="0" minWidth="0">
									<fx:Declarations>
										<mx:Glow id="glowOn"
												 alphaFrom="{minAlpha}"
												 alphaTo="{maxAlpha}"
												 blurXFrom="{minGlow}"
												 blurXTo="{maxGlow}"
												 blurYFrom="{minGlow}"
												 blurYTo="{maxGlow}"
												 color="{glowColor}"
												 duration="{duration}"/>
										
										<mx:Glow id="glowOff" 
												 alphaFrom="{maxAlpha}"
												 alphaTo="{minAlpha}"
												 blurXFrom="{maxGlow}"
												 blurXTo="{minGlow}"
												 blurYFrom="{maxGlow}"
												 blurYTo="{minGlow}"
												 color="{glowColor}"
												 duration="{duration}"/>
									</fx:Declarations>
									<fx:Script>
										<![CDATA[
											import mx.core.FlexGlobals;
											import mx.managers.PopUpManager;
											import mx.resources.IResourceManager;
											import mx.resources.ResourceManager;
											
											import org.mxhero.console.commons.component.mails.EmailsDataGridProperties;
											import org.mxhero.console.commons.component.mails.ShowEmail;
											import org.mxhero.console.frontend.application.event.GetRecordStatsEvent;
											
											[Bindable]
											private var rm:IResourceManager=ResourceManager.getInstance();
											
											[Bindable]
											public var glowColor:Number=0xFFFFFF;
											
											[Bindable]
											public var minGlow:Number=1.0;
											
											[Bindable]
											public var maxGlow:Number=10.0;
											
											[Bindable]
											public var minAlpha:Number=0.0;
											
											[Bindable]
											public var maxAlpha:Number=0.5;
											
											[Bindable]
											public var duration:Number=300;
											
											private var lastColor:*;
											
											private function showEmail():void{
												var emailWindow:ShowEmail = new ShowEmail();
												emailWindow.email=data;
												outerDocument.emailWindow=emailWindow;
												outerDocument.dispatcher(new GetRecordStatsEvent(data.sequence,data.insertDate));
												PopUpManager.addPopUp(emailWindow,outerDocument.parentDocument as DisplayObject,true);
												PopUpManager.centerPopUp(emailWindow);
											}
											
											private function onRollOverHandler():void{
												lastColor=childLabel.getStyle("color");
												childLabel.setStyle("color",glowColor);
											}
											
											private function onRollOutHandler():void{
												childLabel.setStyle("color",lastColor);
											}
											
										]]>
									</fx:Script>
									
									<s:Label id="childLabel"
											 styleName="domainList"
											 text="{rm.getString(EmailsDataGridProperties.NAME,EmailsDataGridProperties.DETAILS_LABEL)}"
											 rollOver="{onRollOverHandler();}"
											 rollOut="{onRollOutHandler();}"
											 buttonMode="true"
											 mouseEnabled="true"
											 click="{showEmail()}"
											 rollOverEffect="{glowOn}"
											 toolTip="{rm.getString(EmailsDataGridProperties.NAME,EmailsDataGridProperties.DETAILS_TOOLTIP)}"
											 rollOutEffect="{glowOff}"/>
									
								</s:GridItemRenderer>
							</fx:Component>
						</s:itemRenderer>
					</s:GridColumn>
		</s:ArrayList>
	</s:columns>
</s:DataGrid>
