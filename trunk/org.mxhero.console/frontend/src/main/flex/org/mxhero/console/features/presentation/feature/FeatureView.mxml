<?xml version="1.0" encoding="utf-8"?>
<s:Scroller xmlns:fx="http://ns.adobe.com/mxml/2009" 
		 xmlns:s="library://ns.adobe.com/flex/spark" 
		 xmlns:mx="library://ns.adobe.com/flex/mx" 
		 xmlns:parsley="http://www.spicefactory.org/parsley" 
		 xmlns:component="org.mxhero.console.commons.component.*"
		 enabled="{!model.isUpdating}" 
		 xmlns:component1="org.mxhero.console.commons.feature.component.*"
		 width="100%" xmlns:loader="org.mxhero.console.features.presentation.loader.*">
	
	<fx:Declarations>
		<parsley:Configure/>
		<mx:DateFormatter id="creationDateFormatter" 
						  formatString="DD-MM-YYYY JJ:NN"/>
	</fx:Declarations>
	
	<fx:Script>
		<![CDATA[
			import mx.controls.Alert;
			import mx.events.ListEvent;
			
			import org.mxhero.console.commons.feature.FeatureRuleProperty;
			import org.mxhero.console.commons.resources.CommonsProperties;
			import org.mxhero.console.commons.resources.ImageResources;
			import org.mxhero.console.features.application.resources.FeatureViewProperties;
			import org.mxhero.console.features.application.resources.FeaturesListProperties;
			import org.mxhero.console.features.application.resources.RuleViewProperties;
			import org.mxhero.console.frontend.domain.FeatureRuleDirection;
			
			[Inject]
			[Bindable]
			public var model:FeatureViewPM;

			protected function createdLabelFunction(item:Object,column:GridColumn):String{
				return creationDateFormatter.format(item.created);
			}
	
			protected function updateLabelFunction(item:Object,column:GridColumn):String{
				return creationDateFormatter.format(item.updated);
			}
			
			protected function directionLabelFunction(item:Object,column:GridColumn):String
			{
				if(column.dataField=="fromDirection.freeValue"){
					if(item.fromDirection.freeValue == FeatureRuleDirection.ANYONE ||
						item.fromDirection.freeValue == FeatureRuleDirection.ANYONEELSE){
							return resourceManager.getString(RuleViewProperties.NAME,RuleViewProperties.ANYONE_LABEL);
					}
					if(item.fromDirection.freeValue == FeatureRuleDirection.ALLDOMAINS){
						return resourceManager.getString(RuleViewProperties.NAME,RuleViewProperties.ALLDOMAINS_LABEL);
					}
					return item.fromDirection.freeValue;
				}

				if(column.dataField=="toDirection.freeValue"){
					if(item.toDirection.freeValue == FeatureRuleDirection.ANYONE ||
						item.toDirection.freeValue == FeatureRuleDirection.ANYONEELSE){
						return resourceManager.getString(RuleViewProperties.NAME,RuleViewProperties.ANYONE_LABEL);
					}
					if(item.toDirection.freeValue == FeatureRuleDirection.ALLDOMAINS){
						return resourceManager.getString(RuleViewProperties.NAME,RuleViewProperties.ALLDOMAINS_LABEL);
					}
					
					return item.toDirection.freeValue;
				}
				
				return "";

			}
			
			protected function newRuleLink_clickHandler(event:MouseEvent):void
			{
				model.newRule();
			}


			protected function datagrid2_itemDoubleClickHandler(event:*):void
			{
				model.editRule();
			}

		]]>
	</fx:Script>
<s:Group width="100%" height="100%">

	<mx:HDividedBox width="100%" height="100%"
			  paddingLeft="10" 
			  paddingRight="10" 
			  paddingBottom="20" 
			  paddingTop="10"
			  horizontalGap="30"
			  >
	<s:VGroup height="100%" width="100%" minWidth="600">
		<component:TitleExpanded width="100%"
								 title="{model.selectedCategory.label+' > '+ model.selectedFeature.simpleLabel}"
								 description="{model.selectedFeature.description}"
								 expandedDescription="{model.selectedFeature.explain}"
								 expandedLabel="{resourceManager.getString(CommonsProperties.NAME,CommonsProperties.EXPAND_LABEL)}"
								 reducedLabel="{resourceManager.getString(CommonsProperties.NAME,CommonsProperties.REDUCED_LABEL)}"
								 enableExpanded="true"
								 backLink="{resourceManager.getString(FeaturesListProperties.NAME,FeaturesListProperties.GOBACK_LABEL)}"
								 backLinkFunction="{model.goBack}"
								 backLinkTooltip="{resourceManager.getString(FeaturesListProperties.NAME,FeaturesListProperties.GOBACK_TOOLTIP)}"/>
	
		<mx:LinkButton id="newRuleLink"
					   label="{resourceManager.getString(FeatureViewProperties.NAME,FeatureViewProperties.ADD_NEW_FEATURE_LABEL)}" 
					   icon="{ImageResources.ADD_ICO}"
					   styleName="action"
					   click="newRuleLink_clickHandler(event)"/>
		
		<s:DataGrid dataProvider="{model.selectedFeature.rules}" 
					 width="100%" 
					 height="100%"
					 minWidth="600"
					 selectedItem="@{model.selectedRule}"
					 doubleClick="datagrid2_itemDoubleClickHandler(event)"
					 doubleClickEnabled="true"
					 mouseChildren="true">
			<s:columns>
				<s:ArrayList>
				<s:GridColumn  width="36" sortable="false" resizable="false" >
					<s:itemRenderer>
						<fx:Component>
							<s:GridItemRenderer width="100%">
								<s:layout>
									<s:HorizontalLayout horizontalAlign="center" verticalAlign="middle"/>
								</s:layout>
								<fx:Script>
									<![CDATA[
										import org.mxhero.console.features.application.resources.FeatureViewProperties;
										import org.mxhero.console.features.application.resources.FeaturesImages;
	
									]]>
								</fx:Script>
								<s:Group>
									<s:layout>
										<s:BasicLayout/>
									</s:layout>
									<component1:GlowButton maxGlow="10.0" 
														  click="{outerDocument.model.changeRuleStatus()}"
														  visible="{!data.enabled}"
														  source="{FeaturesImages.DISABLED}" toolTip="{resourceManager.getString(FeatureViewProperties.NAME,FeatureViewProperties.COLUMN_RULE_ENBABLE_TOOLTIP)}"/>
									<component1:GlowButton maxGlow="10.0" 
														  click="{outerDocument.model.changeRuleStatus()}"
														  visible="{data.enabled}"
														  source="{FeaturesImages.ENABLED}" toolTip="{resourceManager.getString(FeatureViewProperties.NAME,FeatureViewProperties.COLUMN_RULE_DISABLE_TOOLTIP)}"/>						
								
								</s:Group>
							</s:GridItemRenderer>
						</fx:Component>
					</s:itemRenderer>
				</s:GridColumn>
				<s:GridColumn headerText="{resourceManager.getString(FeatureViewProperties.NAME,FeatureViewProperties.COLUMN_RULE_FROM_LABEL)}" 
								   width="160"
								   minWidth="50"
								   dataField="fromDirection.freeValue"
								   labelFunction="directionLabelFunction"/>
				<s:GridColumn headerText="{resourceManager.getString(FeatureViewProperties.NAME,FeatureViewProperties.COLUMN_RULE_TO_LABEL)}" 
								   width="160"
								   minWidth="50"
								   dataField="toDirection.freeValue"
								   labelFunction="directionLabelFunction"/>
				<s:GridColumn dataField="name" 
								   headerText="{resourceManager.getString(FeatureViewProperties.NAME,FeatureViewProperties.COLUMN_RULE_NAME_LABEL)}" 
								   minWidth="50"/>
				<s:GridColumn dataField="updated" 
								   headerText="{resourceManager.getString(FeatureViewProperties.NAME,FeatureViewProperties.COLUMN_RULE_UPDATED_LABEL)}" 
								   labelFunction="updateLabelFunction"
								   minWidth="120"/>
				<s:GridColumn  width="92" minWidth="92" sortable="false" resizable="false">
					<s:itemRenderer>
						<fx:Component>
							<s:GridItemRenderer width="100%">
								<s:layout>
									<s:HorizontalLayout horizontalAlign="center" verticalAlign="middle"/>
								</s:layout>
								<fx:Script>
									<![CDATA[
										import org.mxhero.console.commons.resources.ImageResources;
										import org.mxhero.console.configurations.application.resources.DomainsShowProperties;
										import org.mxhero.console.features.application.resources.FeatureViewProperties;
										
									]]>
								</fx:Script>
								<component1:GlowButton maxGlow="10.0" 
													  click="{outerDocument.model.editRule()}"
													  source="{ImageResources.EDIT_ICO}" toolTip="{resourceManager.getString(FeatureViewProperties.NAME,FeatureViewProperties.EDIT_RULE_TOOLTIP)}"/>
								<component1:GlowButton maxGlow="10.0" 
													  click="{outerDocument.model.removeRule()}"
													  source="{ImageResources.DELETE_ICO}" toolTip="{resourceManager.getString(FeatureViewProperties.NAME,FeatureViewProperties.REMOVE_RULE_TOOLTIP)}"/>						
							</s:GridItemRenderer>
						</fx:Component>
					</s:itemRenderer>
				</s:GridColumn>
				</s:ArrayList>
			</s:columns>
		</s:DataGrid>
			
	</s:VGroup>
		<loader:ReportLoader
			url="{model.selectedFeature.moduleReportUrl}"
			height="100%" 
			width="100%"/>

	</mx:HDividedBox>
</s:Group>
</s:Scroller>
