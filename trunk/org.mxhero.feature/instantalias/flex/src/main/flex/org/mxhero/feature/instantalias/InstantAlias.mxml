<?xml version="1.0" encoding="utf-8"?>
<!--
mxHero is a platform that intends to provide a single point of development 
and single point of distribution for email solutions and enhancements. It does this
by providing an extensible framework for rapid development and deployment of
email solutions.

Copyright (C) 2012  mxHero Inc.

This program is free software: you can redistribute it and/or modify
it under the terms of the GNU General Public License as published by
the Free Software Foundation, either version 3 of the License, or
(at your option) any later version.

This program is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU General Public License for more details.

You should have received a copy of the GNU General Public License
along with this program.  If not, see <http://www.gnu.org/licenses/>.
-->
<mx:Module xmlns:fx="http://ns.adobe.com/mxml/2009" 
		   xmlns:s="library://ns.adobe.com/flex/spark" 
		   xmlns:mx="library://ns.adobe.com/flex/mx" 
		   layout="vertical"
		   verticalGap="10"
		   paddingTop="40" 
		   creationComplete="creationCompleteHandler(event)" 
		   xmlns:component="org.mxhero.console.commons.feature.component.*"
		   implements="org.mxhero.console.commons.feature.IFeature">
	
	<fx:Declarations>
	</fx:Declarations>
	
	<fx:Style>
		@namespace s "library://ns.adobe.com/flex/spark";
		@namespace mx "library://ns.adobe.com/flex/mx";
		@namespace component "org.mxhero.console.commons.feature.component.*";
		
		.instantaliasTitleStyle { 
			fontSize: 16;
			color: #FFFFFF;
			fontWeight:bold;
		}
		
	</fx:Style>
	
	<fx:Script>
		<![CDATA[
			import mx.collections.ArrayCollection;
			import mx.events.FlexEvent;
			
			import org.mxhero.console.commons.feature.FeatureRuleProperty;
			import org.mxhero.console.commons.feature.IFeature;
			import org.mxhero.console.commons.feature.PropertyHelper;
			
			private var errorMessage:String;
			
			private var initialProperties:ArrayCollection;
			
			[Bindable]
			private var separators:ArrayCollection = new ArrayCollection(["-","+","=","_","'","."]);
			
			protected function creationCompleteHandler(event:FlexEvent):void
			{
				styleManager.loadStyleDeclarations("styles/mxhero.swf",true,false,ApplicationDomain.currentDomain);
				loadProperties();
			}
			
			public function isValid():Boolean{
				return true;
			}
			
			private function loadProperties():void{
				if(initialProperties!=null){
					var savedCharater:String = PropertyHelper.getProperty(initialProperties,'separation.charater').propertyValue;
					var selectItem:Number = 1;
					for (var i:int=0;i<separators.length;i++){
						if(savedCharater==separators.getItemAt(i)){
							selectItem=i;
							break;
						}
					}
					charatersDdl.selectedIndex=selectItem;
				}
			}
			
			public function setProperties(data:ArrayCollection):void{
				initialProperties=data;
			}
			
			public function getProperties():ArrayCollection{
				var properties:ArrayCollection = new ArrayCollection();

				var property:FeatureRuleProperty = new FeatureRuleProperty();
				property.propertyKey="separation.charater";
				property.propertyValue=charatersDdl.selectedItem;
				properties.addItem(property);
				
				return properties;
			}
			
			public function getValidationError():String{
				return errorMessage;
			}
			
			public function fixedTo():Boolean{
				return true;
			}
			
			public function fixedFrom():Boolean{
				return true;
			}
			
			public function fixedToValue():String{
				return "owndomain";
			}
			
			public function fixedFromValue():String{
				return "anyone";
			}
			
			public function set applicationContext(ap:Object):void{
			}
			
			public function get applicationContext():Object{
				return null;
			}
			
		]]>
	</fx:Script>
	
	<fx:Metadata>
		[ResourceBundle("instantalias")]
		[ResourceBundle("textLayout")]
	</fx:Metadata>
	
	<component:LabelExpanded labelText="{resourceManager.getString('instantalias','first.title')}"
							 expandedText="{resourceManager.getString('instantalias','alias.separator.explain')}"
							 explainText="{resourceManager.getString('instantalias','label.explain')}"
							 hideText="{resourceManager.getString('instantalias','label.hide')}"
							 expandedLabelStyleName="instantaliasTitleStyle"
							 width="400"/>

	<s:VGroup gap="10" paddingLeft="24" width="400" verticalAlign="middle">
		<s:HGroup width="100%" verticalAlign="top" gap="10">
			<s:Label height="100%" verticalAlign="middle" text="{resourceManager.getString('instantalias','separator.charaters.list')}"/>
			<s:DropDownList id="charatersDdl" width="50" 
							textAlign="center" dataProvider="{separators}" 
							selectedIndex="1"
							fontSize="16"/>
		</s:HGroup>


	</s:VGroup>
		
</mx:Module>
