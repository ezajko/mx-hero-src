<?xml version="1.0" encoding="utf-8"?>
<s:Group xmlns:fx="http://ns.adobe.com/mxml/2009" 
		 xmlns:s="library://ns.adobe.com/flex/spark" 
		 xmlns:mx="library://ns.adobe.com/flex/mx"
		 width="100%"
		 minHeight="55">

	<fx:Declarations>
	</fx:Declarations>
	
	<fx:Script>
		<![CDATA[
			import mx.controls.Alert;
			import mx.controls.LinkButton;
			
			[Bindable]
			public var backLinkFunction:Function;
			
			[Bindable]
			public var backLinkTooltip:String;
			
			[Bindable]
			public var title:String="Title";
			
			[Bindable]
			public var description:String="Description";
			
			[Bindable]
			public var expandedDescription:String="Expanded Description";

			[Bindable]
			public var expandedLabel:String="(more)";
			
			[Bindable]
			public var reducedLabel:String="(less)";
			
			[Bindable]
			public var enableExpanded:Boolean=true;
			
			protected function expandLabel_clickHandler(event:MouseEvent):void
			{
				if(currentState=="expanded"){
					currentState="default"
				} else {
					currentState="expanded";
				}
				
			}

			public function get backLink():String
			{
				return backLinkButton.label;
			}

			public function set backLink(value:String):void
			{
				if(value==null){
					backLinkButton.visible=false;
					backLinkButton.label="";
				} else {
					backLinkButton.visible=true;
					backLinkButton.label=value;				
				}
				backLinkButton.invalidateDisplayList();	
			}

			protected function backLinkButton_clickHandler(event:MouseEvent):void
			{
				if(backLinkFunction!=null){
					backLinkFunction();
				}
			}

		]]>
	</fx:Script>
	
	<s:states> 
		<s:State name="default"/>    
		<s:State name="expanded"/> 
	</s:states> 
	
	<s:transitions> 
		<s:Transition fromState="default" toState="expanded" > 
			<s:Sequence>
				<s:Fade target="{expandedText}" alphaFrom="1" alphaTo="0" duration="0"/>
				<s:Resize target="{this}" duration="200"/>
				<s:Fade target="{expandedText}" alphaFrom="0" alphaTo="1" duration="200"/>
			</s:Sequence>
		</s:Transition> 
		<s:Transition fromState="expanded" toState="default"> 
			<s:Sequence>
				<s:Fade target="{expandedText}" alphaFrom="0" alphaTo="1" duration="0"/>
				<s:Fade target="{expandedText}" alphaFrom="1" alphaTo="0" duration="200" />
				<s:Resize target="{this}" duration="200"/>
			</s:Sequence>
		</s:Transition> 
	</s:transitions> 
	
	<s:layout>
		<s:VerticalLayout gap="10"/>
	</s:layout>
	<s:HGroup id="titleContainer" width="100%" verticalAlign="middle">
		<mx:LinkButton 	styleName="titleexpanded_back"
						id="backLinkButton" 
					   	visible="false"
					  	click="backLinkButton_clickHandler(event)"
					   	toolTip="{backLinkTooltip}"/>
		<s:Label styleName="titleexpanded_title" id="titleLabel" text="{title}" paddingTop="4"/>
		<mx:Spacer width="1"/>
		<s:Label id="expandLabel" 
				 styleName="titleexpanded_expand"
				 text.default="{expandedLabel}" 
				 text.expanded="{reducedLabel}" 
				 buttonMode="true" 
				 visible="{enableExpanded}" 
				 click="expandLabel_clickHandler(event)"/>
	</s:HGroup>
	
	<mx:Text styleName="titleexpanded_text" text="{description}" width="100%"/>
	<mx:Text id="expandedText" styleName="titleexpanded_text" includeIn="expanded" text="{expandedDescription}" width="100%" />
</s:Group>
