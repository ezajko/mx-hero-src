<?xml version="1.0" encoding="utf-8"?>
<s:Scroller xmlns:fx="http://ns.adobe.com/mxml/2009" 
		 xmlns:s="library://ns.adobe.com/flex/spark" 
		 xmlns:mx="library://ns.adobe.com/flex/mx" 
		 xmlns:parsley="http://www.spicefactory.org/parsley"		 
		 horizontalScrollPolicy="off" 
		 xmlns:component1="org.mxhero.console.commons.feature.component.*" 
		 xmlns:component="org.mxhero.console.commons.component.*" 
		 xmlns:FromTo="org.mxhero.console.commons.FromTo.*" 
		 xmlns:cloudtag="org.mxhero.components.cloudtag.*"
		 creationComplete="scroller1_creationCompleteHandler(event)" xmlns:element="org.mxhero.console.commons.FromTo.element.*">
	
	<fx:Declarations>
		<parsley:Configure/>
		
		<mx:DateFormatter id="creationDateFormatter"
						  />
		
		<mx:DateFormatter id="creationHourFormatter"
						  formatString="HH:NN:SS"
						  />
		
		<s:RadioButtonGroup id="time" />
		
		<mx:SeriesSlide id="slideIn" 
						duration="800" 
						direction="right"/>
		
		<mx:SeriesSlide id="slideOut" 
						duration="800" 
						direction="left"/>
		
		<fx:Array id="bge1">
			<mx:GridLines 
				horizontalChangeCount="1" 
				verticalChangeCount="1"
				gridDirection="both"
				>
				<mx:horizontalStroke>
					<mx:SolidColorStroke weight="1" color="#FFFFFF"/>
				</mx:horizontalStroke>
				<mx:verticalStroke>
					<mx:SolidColorStroke weight="1" color="#FFFFFF"/>
				</mx:verticalStroke>
				<mx:filters>
					<s:DropShadowFilter
						distance="4"
						color="0x666666"
						alpha=".9"/>
				</mx:filters>
			</mx:GridLines>
		</fx:Array>
		
		<fx:Array id="bge2">
			<mx:GridLines 
				horizontalChangeCount="1" 
				verticalChangeCount="1"
				gridDirection="both"
				>
				<mx:horizontalStroke>
					<mx:SolidColorStroke weight="1" color="#FFFFFF"/>
				</mx:horizontalStroke>
				<mx:verticalStroke>
					<mx:SolidColorStroke weight="1" color="#FFFFFF"/>
				</mx:verticalStroke>
				<mx:filters>
					<s:DropShadowFilter
						distance="4"
						color="0x666666"
						alpha=".9"/>
				</mx:filters>
			</mx:GridLines>
		</fx:Array>
	</fx:Declarations>
	
	
	<fx:Script>
		<![CDATA[
			import at.leichtgewicht.cloud.text.DefaultTextRenderer;
			
			import mx.collections.ArrayCollection;
			import mx.events.FlexEvent;
			
			import org.mxhero.console.commons.resources.CommonsProperties;
			import org.mxhero.console.frontend.domain.FeatureRuleDirection;
			import org.mxhero.console.reports.application.resources.CustomProperties;
			import org.mxhero.console.reports.application.resources.ReportCommonProperties;
			import org.mxhero.console.reports.application.resources.ReportsListProperties;
			import org.mxhero.console.reports.application.resources.ThreatsProperties;
			import org.mxhero.console.reports.application.resources.TrafficProperties;
			
			[Inject]
			[Bindable]
			public var model:CustomPM;
			
			[Bindable]
			private var startDate:Date;
			
			protected function dateLabelFunction(item:Object,column:DataGridColumn):String{
				return creationDateFormatter.format(item.insertDate)+" "+creationHourFormatter.format(item.insertDate);
			}

			protected function fromTo_creationCompleteHandler(event:FlexEvent):void
			{
				CustomPM.refresh=fromTo.refresh;
				fromTo.refresh();
				refreshDateRange();
			}
			
			private function refreshDateRange():void{
				startDate=new Date();
				startDate.time=startDate.time-24*60*60*1000*21;
				fromDate.selectableRange={rangeStart:startDate, rangeEnd:toDate.selectedDate};
				toDate.selectableRange = {rangeStart:startDate, rangeEnd:new Date()};
				fromDate.selectedDate=(toDate.selectedDate.time>fromDate.selectedDate.time)?fromDate.selectedDate:toDate.selectedDate;
			}
			
			protected function scroller1_creationCompleteHandler(event:FlexEvent):void
			{
				this.addEventListener(MouseEvent.MOUSE_WHEEL,handleWheel,true,100);
			}
			
			protected function handleWheel(event:MouseEvent):void{
				event.delta*=4;
			}


			protected function item1_clickHandler(event:MouseEvent):void
			{
				if(!fromTo.isValid()){
					searchBtt.errorString=fromTo.errorMessage;
					return;
				}
				if(today.selected){
					model.filter(new Date(),new Date());
				}else{
					model.filter(fromDate.selectedDate,toDate.selectedDate);
				}
			}

		]]>
	</fx:Script>
	
	<s:Group width="100%" height="100%">
		<s:VGroup gap="10" paddingLeft="10" 
				  paddingRight="10" paddingBottom="10" 
				  paddingTop="10" 
				  width="100%" height="100%">
			
			<component:TitleExpanded width="100%"
									 title="{resourceManager.getString(CustomProperties.NAME,CustomProperties.TITLE)}"
									 description="{resourceManager.getString(CustomProperties.NAME,CustomProperties.DESCRIPTION)}"
									 expandedLabel="{resourceManager.getString(CommonsProperties.NAME,CommonsProperties.EXPAND_LABEL)}"
									 reducedLabel="{resourceManager.getString(CommonsProperties.NAME,CommonsProperties.REDUCED_LABEL)}"
									 enableExpanded="false"
									 backLink="{resourceManager.getString(ReportsListProperties.NAME,ReportsListProperties.GOBACK_LABEL)}"
									 backLinkFunction="{model.goBack}"
									 backLinkTooltip="{resourceManager.getString(ReportsListProperties.NAME,ReportsListProperties.GOBACK_TOOLTIP)}"/>
			<mx:Spacer height="0"/>
			
			
			<s:HGroup width="100%" height="100%" gap="20">
				<s:VGroup height="100%" width="60%" enabled="{!model.updatingEmails}">
					<FromTo:FromTo fromDirection="{model.fromDirection}"
								   toDirection="{model.toDirection}"
								   adminOrder="after"
								   id="fromTo"
								   showAdminPriority="false"
								   creationComplete="fromTo_creationCompleteHandler(event)"/>
					<s:HGroup paddingLeft="80" gap="20">
						<s:RadioButton group="{time}" id="today" label="{resourceManager.getString(CustomProperties.NAME,CustomProperties.TODAY_LABEL)}" selected="true"/>
						<s:RadioButton group="{time}" id="range" label="{resourceManager.getString(CustomProperties.NAME,CustomProperties.RANGE_LABEL)}"/>
						<s:HGroup enabled="{range.selected}" verticalAlign="middle">
							<s:Label text="{resourceManager.getString(CustomProperties.NAME,CustomProperties.RANGE_FROM_LABEL)}"/>
							<mx:DateField id="fromDate" 
										  selectedDate="{new Date()}"/>
							<s:Label text="{resourceManager.getString(CustomProperties.NAME,CustomProperties.RANGE_TO_LABEL)}" />
							<mx:DateField id="toDate"
										  selectedDate="{new Date()}"
										  valueCommit="{refreshDateRange()}"/>
						</s:HGroup>
						<s:Button id="searchBtt" 
								  label="{resourceManager.getString(CustomProperties.NAME,CustomProperties.SEARCH_LABEL)}" 
								  click="item1_clickHandler(event)" 
								  enabled="{fromTo.isValid()}"
								  />
					</s:HGroup>
					
					<mx:DataGrid width="100%" 
								 borderStyle="solid" 
								 borderColor="0x336699"
								 dataProvider="{model.emails}"
								 height="100%">
						<mx:columns>						
							<mx:DataGridColumn  width="36" sortable="false" resizable="false" >
								<mx:itemRenderer>
									<fx:Component>
										<s:MXDataGridItemRenderer width="100%">
											<s:layout>
												<s:VerticalLayout horizontalAlign="center" verticalAlign="middle"/>
											</s:layout>
											<fx:Script>
												<![CDATA[
													import mx.resources.IResourceManager;
													import mx.resources.ResourceManager;
													
													import org.mxhero.console.reports.application.resources.ReportCommonProperties;
													import org.mxhero.console.reports.application.resources.ReportsImages;
													
													[Bindable]
													private var rm:IResourceManager = ResourceManager.getInstance();
													
												]]>
											</fx:Script>
											<s:Group>
												<s:layout>
													<s:BasicLayout/>
												</s:layout>
												<component1:GlowButton maxGlow="10.0" 
																	   visible="{data.state!='drop'}"
																	   source="{ReportsImages.DELIVERED_FROMTO}" 
																	   toolTip="{rm.getString(ReportCommonProperties.NAME,ReportCommonProperties.DELIVERED_TOOLTIP)}"
																	   />
												<component1:GlowButton maxGlow="10.0" 
																	   visible="{data.state=='drop'}"
																	   source="{ReportsImages.DROPPED_FROMTO}" 
																	   toolTip="{rm.getString(ReportCommonProperties.NAME,ReportCommonProperties.DROPPED_TOOLTIP_START)}"/>						
												
											</s:Group>
										</s:MXDataGridItemRenderer>
									</fx:Component>
								</mx:itemRenderer>
							</mx:DataGridColumn>							
							<mx:DataGridColumn dataField="insertDate" headerText="{resourceManager.getString(ReportCommonProperties.NAME,ReportCommonProperties.EMAIL_DATE_LABEL)}" 
											   labelFunction="dateLabelFunction"/>
							<mx:DataGridColumn dataField="from" headerText="{resourceManager.getString(ReportCommonProperties.NAME,ReportCommonProperties.EMAIL_FROM_LABEL)}"/>
							<mx:DataGridColumn dataField="recipient" headerText="{resourceManager.getString(ReportCommonProperties.NAME,ReportCommonProperties.EMAIL_TO_LABEL)}"/>
							<mx:DataGridColumn dataField="subject" headerText="{resourceManager.getString(ReportCommonProperties.NAME,ReportCommonProperties.EMAIL_SUBJECT_LABEL)}"/>
							<mx:DataGridColumn width="70" sortable="false" resizable="false">
								<mx:itemRenderer>
									<fx:Component>
										<mx:HBox minHeight="0" minWidth="0">
											<fx:Declarations>
												<mx:Glow id="glowOn"
														 alphaFrom="{minAlpha}"
														 alphaTo="{maxAlpha}"
														 blurXFrom="{minGlow}"
														 blurXTo="{maxGlow}"
														 blurYFrom="{minGlow}"
														 blurYTo="{maxGlow}"
														 color="{glowColor}"
														 duration="{duration}"/>
												
												<mx:Glow id="glowOff" 
														 alphaFrom="{maxAlpha}"
														 alphaTo="{minAlpha}"
														 blurXFrom="{maxGlow}"
														 blurXTo="{minGlow}"
														 blurYFrom="{maxGlow}"
														 blurYTo="{minGlow}"
														 color="{glowColor}"
														 duration="{duration}"/>
											</fx:Declarations>
											<fx:Script>
												<![CDATA[
													import mx.managers.PopUpManager;
													import mx.resources.IResourceManager;
													import mx.resources.ResourceManager;
													
													import org.mxhero.console.commons.feature.component.ShowEmail;
													import org.mxhero.console.configurations.application.resources.DomainsShowProperties;
													import org.mxhero.console.frontend.domain.Record;
													import org.mxhero.console.reports.application.resources.ReportCommonProperties;
													
													[Bindable]
													private var rm:IResourceManager=ResourceManager.getInstance();
													
													[Bindable]
													public var glowColor:Number=0xFFFFFF;
													
													[Bindable]
													public var minGlow:Number=1.0;
													
													[Bindable]
													public var maxGlow:Number=10.0;
													
													[Bindable]
													public var minAlpha:Number=0.0;
													
													[Bindable]
													public var maxAlpha:Number=0.5;
													
													[Bindable]
													public var duration:Number=300;
													
													private var lastColor:*;
													
													private function showEmail():void{
														var emailWindow:ShowEmail = new ShowEmail();
														emailWindow.email=data as Record;
														PopUpManager.addPopUp(emailWindow,outerDocument,true);
														PopUpManager.centerPopUp(emailWindow);
														PopUpManager.centerPopUp(emailWindow);
													}
													
													private function onRollOverHandler():void{
														lastColor=childLabel.getStyle("color");
														childLabel.setStyle("color",glowColor);
													}
													
													private function onRollOutHandler():void{
														childLabel.setStyle("color",lastColor);
													}
													
												]]>
											</fx:Script>
											
											<s:Label id="childLabel"
													 styleName="domainList"
													 text="{rm.getString(ReportCommonProperties.NAME,ReportCommonProperties.DETAILS_LABEL)}"
													 rollOver="{onRollOverHandler();}"
													 rollOut="{onRollOutHandler();}"
													 buttonMode="true"
													 mouseEnabled="true"
													 click="{showEmail()}"
													 rollOverEffect="{glowOn}"
													 toolTip="{rm.getString(ReportCommonProperties.NAME,ReportCommonProperties.DETAILS_TOOLTIP)}"
													 rollOutEffect="{glowOff}"/>
											
										</mx:HBox>
									</fx:Component>
								</mx:itemRenderer>
							</mx:DataGridColumn>
						</mx:columns>
					</mx:DataGrid>
				</s:VGroup>
				<s:VGroup height="100%" width="40%" >
					<s:VGroup width="100%" height="50%" gap="20">
						<s:Label text="{resourceManager.getString(CustomProperties.NAME,CustomProperties.TOP_TEN_SENDERS_LABEL)}" 
								 fontWeight="bold" fontSize="16"
								 color="#FFFFFF"
								 textDecoration="underline"/>
						<s:HGroup width="100%" height="100%" horizontalAlign="center" verticalAlign="top">
							<mx:BarChart id="linechartFrom" color="0x323232" 
										 height="100%" 
										 width="100%"
										 minHeight="240"
										 showDataTips="true" 
										 styleName="myChart"
										 dataProvider="{model.topTenSenders}"
										 axisTitleStyleName="axisTitles"
										 backgroundElements="{bge1}">
								
								<mx:filters>
									<s:DropShadowFilter
										distance="4"
										color="0x666666"
										alpha=".9"/>
								</mx:filters>
								
								<mx:horizontalAxis>
									
									<mx:LinearAxis id="qtyAxisFrom" 
												   displayName="{resourceManager.getString(ReportCommonProperties.NAME,ReportCommonProperties.AMOUNT_AXIS)}"  
												   title="{resourceManager.getString(ReportCommonProperties.NAME,ReportCommonProperties.AMOUNT_AXIS)}" 
												   />
								</mx:horizontalAxis>
								
								<mx:verticalAxis>
									
									<mx:CategoryAxis
										id="emailAxisFrom"
										categoryField="Email"
										displayName="{resourceManager.getString(ReportCommonProperties.NAME,ReportCommonProperties.EMAILS_AXIS)}"
										title="{resourceManager.getString(ReportCommonProperties.NAME,ReportCommonProperties.EMAILS_AXIS)}"
										/>
								</mx:verticalAxis>
								
								<mx:verticalAxisRenderers>
									<mx:AxisRenderer 
										axis="{emailAxisFrom}" 
										color="#FFFFFF" 
										fontSize="14"
										/>
								</mx:verticalAxisRenderers>
								
								<mx:horizontalAxisRenderers>
									<mx:AxisRenderer 
										axis="{qtyAxisFrom}" 
										color="#FFFFFF" 
										fontSize="14"
										/>	  
									
									
								</mx:horizontalAxisRenderers>
								
								<mx:fill>
									<mx:SolidColor color="0x66CCFF" alpha="0.0"/>
								</mx:fill>
								
								<mx:series>
									<mx:BarSeries xField="Qty" 
												  yField="Email" 
												  showDataEffect="{slideIn}" 
												  hideDataEffect="{slideOut}"
												  id="cserieFrom"
												  buttonMode="true"
												  >
										<mx:stroke>
											<s:SolidColorStroke color="#FFFFFF" caps="round" />
										</mx:stroke>
										<mx:fills>
											<mx:SolidColor color="0xFF99DD" alpha=".6"/>
											<mx:SolidColor color="0xFF80D4" alpha=".6"/>
											<mx:SolidColor color="0xFF66CC" alpha=".6"/>
											<mx:SolidColor color="0xFF4DC3" alpha=".6"/>
											<mx:SolidColor color="0xFF33BB" alpha=".6"/>
											<mx:SolidColor color="0xFF1AB3" alpha=".6"/>
											<mx:SolidColor color="0xFF00AA" alpha=".6"/>
											<mx:SolidColor color="0xE60099" alpha=".6"/>
											<mx:SolidColor color="0xCC0088" alpha=".6"/>
											<mx:SolidColor color="0xB30077" alpha=".6"/>
										</mx:fills>
										<mx:filters>
											<s:DropShadowFilter
												distance="8"
												color="0x666666"
												alpha=".8"/>
										</mx:filters>
									</mx:BarSeries>
								</mx:series>
								
							</mx:BarChart>			
						</s:HGroup>
					</s:VGroup>
					<s:VGroup width="100%" height="50%" gap="20">
						<s:Label text="{resourceManager.getString(CustomProperties.NAME,CustomProperties.TOP_TEN_RECIPIENTS_LABEL)}" 
								 fontWeight="bold" fontSize="16"
								 color="#FFFFFF"
								 textDecoration="underline"/>
						<s:HGroup width="100%" height="100%" horizontalAlign="center" verticalAlign="top">
							<mx:BarChart id="linechartTo" color="0x323232" 
										 height="100%" 
										 width="100%"
										 minHeight="240"
										 showDataTips="true" 
										 styleName="myChart"
										 dataProvider="{model.topTenRecipients}"
										 axisTitleStyleName="axisTitles"
										 backgroundElements="{bge2}">
								
								<mx:filters>
									<s:DropShadowFilter
										distance="4"
										color="0x666666"
										alpha=".9"/>
								</mx:filters>
								
								<mx:horizontalAxis>
									
									<mx:LinearAxis id="qtyAxisTo" 
												   displayName="{resourceManager.getString(ReportCommonProperties.NAME,ReportCommonProperties.AMOUNT_AXIS)}"  
												   title="{resourceManager.getString(ReportCommonProperties.NAME,ReportCommonProperties.AMOUNT_AXIS)}" 
												   />
								</mx:horizontalAxis>
								
								<mx:verticalAxis>
									
									<mx:CategoryAxis
										id="emailAxisTo"
										categoryField="Email"
										displayName="{resourceManager.getString(ReportCommonProperties.NAME,ReportCommonProperties.EMAILS_AXIS)}"
										title="{resourceManager.getString(ReportCommonProperties.NAME,ReportCommonProperties.EMAILS_AXIS)}"
										/>
								</mx:verticalAxis>
								
								<mx:verticalAxisRenderers>
									<mx:AxisRenderer 
										axis="{emailAxisTo}" 
										color="#FFFFFF" 
										fontSize="14"
										/>
								</mx:verticalAxisRenderers>
								
								<mx:horizontalAxisRenderers>
									<mx:AxisRenderer 
										axis="{qtyAxisTo}" 
										color="#FFFFFF" 
										fontSize="14"
										/>	  
									
									
								</mx:horizontalAxisRenderers>
								
								<mx:fill>
									<mx:SolidColor color="0x66CCFF" alpha="0.0"/>
								</mx:fill>
								
								<mx:series>
									<mx:BarSeries xField="Qty" 
												  yField="Email" 
												  showDataEffect="{slideIn}" 
												  hideDataEffect="{slideOut}"
												  id="cserieTo"
												  buttonMode="true"
												  >
										<mx:stroke>
											<s:SolidColorStroke color="#FFFFFF" caps="round" />
										</mx:stroke>
										<mx:fills>
											<mx:SolidColor color="0xCCD9FF" alpha=".6"/>
											<mx:SolidColor color="0xB3C6FF" alpha=".6"/>
											<mx:SolidColor color="0x99B3FF" alpha=".6"/>
											<mx:SolidColor color="0x809FFF" alpha=".6"/>
											<mx:SolidColor color="0x668CFF" alpha=".6"/>
											<mx:SolidColor color="0x4D79FF" alpha=".6"/>
											<mx:SolidColor color="0x3366FF" alpha=".6"/>
											<mx:SolidColor color="0x1A53FF" alpha=".6"/>
											<mx:SolidColor color="0x0040FF" alpha=".6"/>
											<mx:SolidColor color="0x0039E6" alpha=".6"/>
										</mx:fills>
										<mx:filters>
											<s:DropShadowFilter
												distance="8"
												color="0x666666"
												alpha=".8"/>
										</mx:filters>
									</mx:BarSeries>
								</mx:series>
								
							</mx:BarChart>			
						</s:HGroup>
					</s:VGroup>
				</s:VGroup>
				
			</s:HGroup>
		</s:VGroup>
	</s:Group>

</s:Scroller>