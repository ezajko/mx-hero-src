<?xml version="1.0" encoding="utf-8"?>
<s:Group xmlns:fx="http://ns.adobe.com/mxml/2009" 
		 xmlns:s="library://ns.adobe.com/flex/spark" 
		 xmlns:mx="library://ns.adobe.com/flex/mx" 
		 width="100%" height="100%" 
		 xmlns:component="org.mxhero.console.commons.feature.component.*" 
		 xmlns:parsley="http://www.spicefactory.org/parsley"
		 currentState="{model.stateIncomming}"
		 >
	
	<fx:Declarations>
		<parsley:Configure/>
		
		<mx:SeriesZoom id="zoomOut" 
					   duration="800"
					   verticalFocus="top" 
					   horizontalFocus="center"
					   relativeTo="chart"/>
		
		<mx:SeriesZoom id="zoomIn" 
					   duration="800" 
					   verticalFocus="top" 
					   horizontalFocus="center"
					   relativeTo="chart"/>
		
		<mx:SeriesSlide id="slideIn" 
						duration="800" 
						direction="up"/>
		
		<mx:SeriesSlide id="slideOut" 
						duration="800" 
						direction="down"/>
		
		<mx:SeriesSlide id="slideInTop" 
						duration="800" 
						direction="right"/>
		
		<mx:SeriesSlide id="slideOutTop" 
						duration="800" 
						direction="left"/>
		
		<fx:Array id="bge">
			<mx:GridLines 
				horizontalChangeCount="1" 
				verticalChangeCount="1"
				gridDirection="both"
				>
				<mx:horizontalStroke>
					<mx:SolidColorStroke weight="1" color="#FFFFFF"/>
				</mx:horizontalStroke>
				<mx:verticalStroke>
					<mx:SolidColorStroke weight="1" color="#FFFFFF"/>
				</mx:verticalStroke>
				<mx:filters>
					<s:DropShadowFilter
						distance="4"
						color="0x666666"
						alpha=".9"/>
				</mx:filters>
			</mx:GridLines>
		</fx:Array>
		
		<fx:Array id="bge2">
			<mx:GridLines 
				horizontalChangeCount="1" 
				verticalChangeCount="1"
				gridDirection="both"
				>
				<mx:horizontalStroke>
					<mx:SolidColorStroke weight="1" color="#FFFFFF"/>
				</mx:horizontalStroke>
				<mx:verticalStroke>
					<mx:SolidColorStroke weight="1" color="#FFFFFF"/>
				</mx:verticalStroke>
				<mx:filters>
					<s:DropShadowFilter
						distance="4"
						color="0x666666"
						alpha=".9"/>
				</mx:filters>
			</mx:GridLines>
		</fx:Array>
		
	</fx:Declarations>
	
	<fx:Style>
		@namespace s "library://ns.adobe.com/flex/spark";
		@namespace mx "library://ns.adobe.com/flex/mx";
		@namespace chartClasses "mx.charts.chartClasses.*"; 
		
		mx|ColumnChart.myChart {
			fontSize:14;
			font-weight:bold;
			data-tip-style-name:myDataTip;
			axisTitleStyleName:axisTitles;
		}
		
		.axisTitles {
			color:#323232;
			fontWeight:bold;
			fontFamily:Ubuntu;
			fontSize:16;
		}
		
		
		.myDataTip{
			color:#000000;
			font-style:italic;
			font-weight:bold;
			border-weight:2;
		}
		
	</fx:Style>
	
	<s:states>
		<s:State name="zoom_out"/>
		<s:State name="zoom_in"/>
	</s:states>
	
	<fx:Script>
		<![CDATA[
			import flashx.textLayout.compose.TextLineRecycler;
			
			import mx.charts.events.ChartItemEvent;
			import mx.collections.ArrayCollection;
			
			import org.mxhero.console.commons.resources.CommonsProperties;
			import org.mxhero.console.reports.application.resources.ReportCommonProperties;
			import org.mxhero.console.reports.application.resources.ReportsImages;
			import org.mxhero.console.reports.application.resources.ReportsListProperties;
			import org.mxhero.console.reports.application.resources.TrafficProperties;
			import org.mxhero.console.reports.presentation.reports.TrafficPM;
			
			[Inject]
			[Bindable]
			public var model:TrafficPM;

			[Bindable]
			public var dayFrom:Date;
			[Bindable]
			public var dayTo:Date;
			private var selectedDate:Date;
			
			private var cursorId:int;
			
			protected function linechart_itemDoubleClickHandler(event:ChartItemEvent):void
			{
				if(currentState=="zoom_out"){
					selectedDate=new Date();
					selectedDate.setTime(event.hitData.item.Date.getTime());
					dayFrom= new Date();
					dayFrom.setTime(selectedDate.getTime());
					dayFrom.setUTCHours(0,0,0,0);
					dayTo= new Date();
					dayTo.setTime(selectedDate.getTime());
					dayTo.setUTCHours(0,0,0,0);
					dayTo.setTime(dayTo.getTime()+24*60*60*1000);			
					this.callLater(model.getIncommingByDay,[event.hitData.item.Date]);
				}else if(currentState=="zoom_in"){
					this.callLater(model.getIncomming);
				}
				cursorManager.removeCursor(cursorId);
			}

			protected function refresh_clickHandler(event:MouseEvent=null):void
			{
				if(currentState=="zoom_out"){
					model.getIncomming();
				}else if(currentState=="zoom_in"){
					model.getIncommingByDay(selectedDate);
				}
			}
			

			protected function onlyDomainCb_changeHandler(event:Event):void
			{
				refresh_clickHandler();
			}

		]]>
	</fx:Script>
	
	
	<s:Group width="100%" height="100%">
		<s:VGroup width="100%" 
						height="100%"
						paddingLeft="0" 
						paddingRight="0" 
						paddingBottom="0" 
						paddingTop="0"
						>
		
			<s:VGroup width="100%" minWidth="200" height="100%" enabled="{!model.updatingIncoming}">
				<s:HGroup horizontalAlign="left" 
						  width="100%"
						  paddingRight="5"
						  paddingBottom="5">
					<s:Label text="{resourceManager.getString(TrafficProperties.NAME,TrafficProperties.INCOMMING_TITLE)}" 
							 fontWeight="bold" fontSize="16"
							 color="#FFFFFF"
							 textDecoration="underline"/>
<!--				<component:GlowButton
						source="{ReportsImages.EXPORT}" 
						toolTip="{resourceManager.getString(ReportCommonProperties.NAME,ReportCommonProperties.EXPORT)}"/>	
	-->				<component:GlowButton
						source="{ReportsImages.REFRESH}" 
						click="refresh_clickHandler(event)"
						toolTip="{resourceManager.getString(ReportCommonProperties.NAME,ReportCommonProperties.REFRESH)}"/>	
				</s:HGroup>
				
				<mx:ColumnChart id="linechart" color="0x323232" 
								height="100%" minHeight="300" width="100%"
								showDataTips="true" 
								styleName="myChart"
								dataProvider="{model.incommingData}"
								axisTitleStyleName="axisTitles"
								doubleClickEnabled="true"
								itemDoubleClick="linechart_itemDoubleClickHandler(event)"
								backgroundElements="{bge}">
					
					<mx:filters>
						<s:DropShadowFilter
							distance="4"
							color="0x666666"
							alpha=".9"/>
					</mx:filters>
					
					<mx:horizontalAxis>
						<mx:DateTimeAxis id="dateAxis2" 
										 dataUnits.zoom_out="days"
										 labelUnits.zoom_out="days"
										 dataUnits.zoom_in="hours"
										 labelUnits.zoom_in="hours"
										 disabledDays="{[]}"
										 autoAdjust="true"
										 dataInterval="1"
										 padding="1"
										 maximum.zoom_out="{model.untilDate}"
										 minimum.zoom_out="{model.sinceDate}"
										 maximum.zoom_in="{dayTo}"
										 minimum.zoom_in="{dayFrom}"
										 title.zoom_out="{resourceManager.getString(ReportCommonProperties.NAME,ReportCommonProperties.DATE_TITLE)}"
										 title.zoom_in="{resourceManager.getString(ReportCommonProperties.NAME,ReportCommonProperties.TIME_TITLE)}"
										 displayName.zoom_out="{resourceManager.getString(ReportCommonProperties.NAME,ReportCommonProperties.DATE_TITLE)}"
										 displayName.zoom_in="{resourceManager.getString(ReportCommonProperties.NAME,ReportCommonProperties.TIME_TITLE)}"
										 />
					</mx:horizontalAxis>
					
					<mx:verticalAxisRenderers>
						<mx:AxisRenderer axis="{qtyAxis2}" 
										 color="#FFFFFF" 
										 fontSize="14"
										 />	   
						<mx:AxisRenderer axis="{mbAxis2}" 
										 color="#FFFFFF" 
										 fontSize="14"
										 />	   
					</mx:verticalAxisRenderers>
					
					<mx:horizontalAxisRenderers>
						<mx:AxisRenderer labelRotation="45" 
										 axis="{dateAxis2}" 
										 color="#FFFFFF" 
										 fontSize="12"
										 />
					</mx:horizontalAxisRenderers>
					
					
					
					<mx:fill>
						<mx:SolidColor color="0x66CCFF" alpha="0.0"/>
					</mx:fill>
					
					<mx:series>
	
						
						<mx:ColumnSeries xField="Date" yField="Qty" 
										 showDataEffect.zoom_out="{slideIn}" 
										 hideDataEffect.zoom_out="{slideOut}"
										 showDataEffect.zoom_in="{zoomIn}" 
										 hideDataEffect.zoom_in="{zoomOut}"
										 id="cserie"
										 buttonMode="true"
										 rollOver.zoom_out="{this.cursorId = cursorManager.setCursor(ReportsImages.ZOOM_IN);}"
										 rollOut.zoom_out="{cursorManager.removeCursor(cursorId)}"
										 rollOver.zoom_in="{this.cursorId = cursorManager.setCursor(ReportsImages.ZOOM_OUT);}"
										 rollOut.zoom_in="{cursorManager.removeCursor(cursorId)}"
										 displayName="{resourceManager.getString(TrafficProperties.NAME,TrafficProperties.INCOMMING_LABEL)}">
							<mx:stroke>
								<s:SolidColorStroke color="#c93dc4a" caps="round" />
							</mx:stroke>
							<mx:fill>
								<mx:SolidColor color="#c93dc4a" alpha="0.8"/>
							</mx:fill>
							<mx:filters>
								<s:DropShadowFilter
									distance="8"
									color="0x666666"
									alpha=".8"/>
							</mx:filters>
							<mx:verticalAxis>
								<mx:LinearAxis id="qtyAxis2" 
											   title="{resourceManager.getString(ReportCommonProperties.NAME,ReportCommonProperties.EMAILS_AXIS)}" 
											   displayName="{resourceManager.getString(ReportCommonProperties.NAME,ReportCommonProperties.EMAILS_AXIS)}"/>
							</mx:verticalAxis>
						</mx:ColumnSeries>
						<mx:ColumnSeries xField="Date" yField="MB" 
										 showDataEffect.zoom_out="{slideIn}" 
										 hideDataEffect.zoom_out="{slideOut}"
										 showDataEffect.zoom_in="{zoomIn}" 
										 hideDataEffect.zoom_in="{zoomOut}"
										 id="cserie2"
										 buttonMode="true"
										 rollOver.zoom_out="{this.cursorId = cursorManager.setCursor(ReportsImages.ZOOM_IN);}"
										 rollOut.zoom_out="{cursorManager.removeCursor(cursorId)}"
										 rollOver.zoom_in="{this.cursorId = cursorManager.setCursor(ReportsImages.ZOOM_OUT);}"
										 rollOut.zoom_in="{cursorManager.removeCursor(cursorId)}"
									 displayName="{resourceManager.getString(TrafficProperties.NAME,TrafficProperties.INCOMMING_LABEL)}">
							<mx:stroke>
								<s:SolidColorStroke color="#fff797" caps="round" />
							</mx:stroke>
							<mx:fill>
								<mx:SolidColor color="#fff797" alpha="0.8"/>
							</mx:fill>
							<mx:filters>
								<s:DropShadowFilter
									distance="8"
									color="0x666666"
									alpha=".8"/>
							</mx:filters>
							<mx:verticalAxis>
								<mx:LinearAxis id="mbAxis2" 
											   title="{resourceManager.getString(TrafficProperties.NAME,TrafficProperties.SIZE_MB_LABEL)}"  
											   displayName="{resourceManager.getString(TrafficProperties.NAME,TrafficProperties.SIZE_MB_LABEL)}"/>
							</mx:verticalAxis>
						</mx:ColumnSeries>
					</mx:series>
					
				</mx:ColumnChart>
			</s:VGroup>
			
			<s:VGroup width="100%" minWidth="200" height="100%" gap="20" enabled="{!model.updatingIncomingSenders}">
				<s:HGroup>
					<s:Label text="{resourceManager.getString(TrafficProperties.NAME,TrafficProperties.TOP_TEN_SENDERS_TITLE)}" 
							 fontWeight="bold" fontSize="16"
							 color="#FFFFFF"
							 textDecoration="underline"/>
					<s:CheckBox id="onlyDomainCb" 
								label="{resourceManager.getString(TrafficProperties.NAME,TrafficProperties.TOP_TEN_ONLY_DOMAIN)}" 
								selected="@{model.onlyDomain}" 
								change="onlyDomainCb_changeHandler(event)"/>
				</s:HGroup>
				<s:HGroup width="100%" height="100%" horizontalAlign="center" verticalAlign="top">
					<mx:BarChart id="linechartTo" color="0x323232" 
								 height="100%" 
								 width="100%"
								 minHeight="200"
								 showDataTips="true" 
								 styleName="myChart"
								 dataProvider="{model.incommingSendersData}"
								 axisTitleStyleName="axisTitles"
								 backgroundElements="{bge2}"
								 >
						
						<mx:filters>
							<s:DropShadowFilter
								distance="4"
								color="0x666666"
								alpha=".9"/>
						</mx:filters>
						
						<mx:horizontalAxis>
							
							<mx:LinearAxis id="qtyAxisTo"
										   displayName="{resourceManager.getString(ReportCommonProperties.NAME,ReportCommonProperties.AMOUNT_AXIS)}"  
										   title="{resourceManager.getString(ReportCommonProperties.NAME,ReportCommonProperties.AMOUNT_AXIS)}" 
										   />
						</mx:horizontalAxis>
						
						<mx:verticalAxis>
							
							<mx:CategoryAxis
								id="emailAxisTo"
								categoryField="Email"
								displayName="{resourceManager.getString(ReportCommonProperties.NAME,ReportCommonProperties.EMAILS_AXIS)}"
								title="{resourceManager.getString(ReportCommonProperties.NAME,ReportCommonProperties.EMAILS_AXIS)}"
								/>
						</mx:verticalAxis>
						
						<mx:verticalAxisRenderers>
							<mx:AxisRenderer 
								axis="{emailAxisTo}" 
								color="#FFFFFF" 
								canStagger="true"
								canDropLabels="false"
								fontSize="14"/>
						</mx:verticalAxisRenderers>
						
						<mx:horizontalAxisRenderers>
							<mx:AxisRenderer 
								axis="{qtyAxisTo}" 
								color="#FFFFFF" 
								fontSize="14"
								/>	  
							
							
						</mx:horizontalAxisRenderers>
						
						<mx:fill>
							<mx:SolidColor color="0x66CCFF" alpha="0.0"/>
						</mx:fill>
						
						<mx:series>
							<mx:BarSeries xField="Qty" 
										  yField="Email" 
										  showDataEffect="{slideInTop}" 
										  hideDataEffect="{slideOutTop}"
										  id="cserieTo"
										  >
								<mx:stroke>
									<s:SolidColorStroke color="#FFFFFF" caps="round" />
								</mx:stroke>
								<mx:fills>
									<mx:SolidColor color="0xC6FFB3" alpha=".6"/>
									<mx:SolidColor color="0xB3FF99" alpha=".6"/>
									<mx:SolidColor color="0x9FFF80" alpha=".6"/>
									<mx:SolidColor color="0x8CFF66" alpha=".6"/>
									<mx:SolidColor color="0x79FF4D" alpha=".6"/>
									<mx:SolidColor color="0x66FF33" alpha=".6"/>
									<mx:SolidColor color="0x53FF1A" alpha=".6"/>
									<mx:SolidColor color="0x40FF00" alpha=".6"/>
									<mx:SolidColor color="0x39E600" alpha=".6"/>
									<mx:SolidColor color="0x33CC00" alpha=".6"/>
								</mx:fills>
								<mx:filters>
									<s:DropShadowFilter
										distance="8"
										color="0x666666"
										alpha=".8"/>
								</mx:filters>
							</mx:BarSeries>
						</mx:series>
						
					</mx:BarChart>			
				</s:HGroup>
			</s:VGroup>
		
		</s:VGroup>
	</s:Group>
</s:Group>

