<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mvc="http://www.springframework.org/schema/mvc" xmlns:util="http://www.springframework.org/schema/util"
	xsi:schemaLocation="
		http://www.springframework.org/schema/beans
		http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
		http://www.springframework.org/schema/context
		http://www.springframework.org/schema/context/spring-context-3.1.xsd
		http://www.springframework.org/schema/mvc
		http://www.springframework.org/schema/mvc/spring-mvc.xsd
		http://www.springframework.org/schema/util
		http://www.springframework.org/schema/util/spring-util.xsd">

	<!-- Enable annotation scanning. -->
	<context:component-scan base-package="org.mxhero.webapi" />

	<bean
		class="org.springframework.web.servlet.view.ContentNegotiatingViewResolver">
		<property name="order" value="1" />
		<property name="mediaTypes">
			<map>
				<entry key="json" value="application/json" />
			</map>
		</property>

		<property name="defaultViews">
			<list>
				<!-- JSON View -->
				<bean id="jacksonJsonView"
					class="org.springframework.web.servlet.view.json.MappingJacksonJsonView" />
			</list>
		</property>
		<property name="ignoreAcceptHeader" value="true" />
	</bean>

	<mvc:interceptors>
		<bean id="localeChangeInterceptor"
			class="org.springframework.web.servlet.i18n.LocaleChangeInterceptor">
			<property name="paramName" value="lang" />
		</bean>
	</mvc:interceptors>
	<bean id="localeResolver"
		class="org.springframework.web.servlet.i18n.AcceptHeaderLocaleResolver" />

	<!-- Should be defined last! --> 
	<mvc:annotation-driven ignoreDefaultModelOnRedirect="true" >
		<mvc:message-converters>
				<bean class="org.springframework.http.converter.json.MappingJacksonHttpMessageConverter"/>
		</mvc:message-converters>
	</mvc:annotation-driven>

	<!-- Allow Exceptions to be handled in annotated methods if desired. Otherwise 
		fallback to the 'restExceptionResolver' below: -->
	<bean id="annotationMethodHandlerExceptionResolver"
		class="org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerExceptionResolver">
		<property name="order" value="0" />
	</bean>
	<bean id="restExceptionResolver" class="org.mxhero.webapi.restful.exception.handler.RestExceptionHandler">
		<property name="order" value="100" />
		<property name="errorResolver">
			<bean class="org.mxhero.webapi.restful.exception.handler.DefaultRestErrorResolver">
				<property name="localeResolver" ref="localeResolver" />
				<property name="defaultMoreInfoUrl" value="mailto:support@mxhero.com" />
				<property name="exceptionMappingDefinitions">
					<map>
						<!-- 404 -->
						<entry
							key="org.mxhero.webapi.service.exception.UnknownResourceException"
							value="404, _exmsg" />
							<!-- 409 -->
						<entry
							key="org.mxhero.webapi.service.exception.ConfictResourceException"
							value="409_exmsg" />
						<!-- 500 (catch all): -->
						<entry key="Throwable" value="500" />
					</map>
				</property>
			</bean>
		</property>
	</bean>
</beans>