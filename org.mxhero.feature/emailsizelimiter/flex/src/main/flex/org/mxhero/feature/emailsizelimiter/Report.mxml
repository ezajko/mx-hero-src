<?xml version="1.0" encoding="utf-8"?>
<!--
mxHero is a platform that intends to provide a single point of development 
and single point of distribution for email solutions and enhancements. It does this
by providing an extensible framework for rapid development and deployment of
email solutions.

Copyright (C) 2012  mxHero Inc.

This program is free software: you can redistribute it and/or modify
it under the terms of the GNU General Public License as published by
the Free Software Foundation, either version 3 of the License, or
(at your option) any later version.

This program is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU General Public License for more details.

You should have received a copy of the GNU General Public License
along with this program.  If not, see <http://www.gnu.org/licenses/>.
-->
<mx:Module xmlns:fx="http://ns.adobe.com/mxml/2009" 
		   xmlns:s="library://ns.adobe.com/flex/spark" 
		   xmlns:mx="library://ns.adobe.com/flex/mx" 
		   layout="vertical"
		   creationComplete="creationCompleteHandler(event)"
		   width="100%"
		   height="100%"  
		   xmlns:component="org.mxhero.console.commons.feature.component.*"
		   implements="org.mxhero.console.commons.feature.IReport" xmlns:mails="org.mxhero.console.mails.*">
	
	<fx:Declarations>
	
		<mx:DateFormatter id="dateFormatter" formatString="YYYY-MM-DD"/>
		
		<mx:SeriesSlide id="slideIn" 
						duration="800" 
						direction="up"/>
		
		<mx:SeriesSlide id="slideOut" 
						duration="800" 
						direction="down"/>
		
		<fx:Array id="bge">
			<mx:GridLines 
				horizontalChangeCount="1" 
				verticalChangeCount="1"
				gridDirection="both"
				>
				<mx:horizontalStroke>
					<mx:SolidColorStroke weight="1" color="#FFFFFF"/>
				</mx:horizontalStroke>
				<mx:verticalStroke>
					<mx:SolidColorStroke weight="1" color="#FFFFFF"/>
				</mx:verticalStroke>
				<mx:filters>
					<s:DropShadowFilter
						distance="4"
						color="0x666666"
						alpha=".9"/>
				</mx:filters>
			</mx:GridLines>
		</fx:Array>
	</fx:Declarations>
	
	<fx:Style>
		@namespace s "library://ns.adobe.com/flex/spark";
		@namespace mx "library://ns.adobe.com/flex/mx";
		@namespace chartClasses "mx.charts.chartClasses.*"; 
		
		mx|ColumnChart.myChart {
			fontSize:14;
			font-weight:bold;
			data-tip-style-name:myDataTip;
			axisTitleStyleName:axisTitles;
		}

		.axisTitles {
			color:#323232;
			fontWeight:bold;
			fontFamily:Ubuntu;
			fontSize:16;
		}

		
		.myDataTip{
			color:#000000;
			font-style:italic;
			font-weight:bold;
			border-weight:2;
		}
		
	</fx:Style>

	<fx:Script>
		<![CDATA[
			import mx.charts.chartClasses.IAxis;
			import mx.charts.events.ChartItemEvent;
			import mx.collections.ArrayCollection;
			import mx.events.FlexEvent;
			
			import org.mxhero.console.commons.feature.IReport;
			import org.mxhero.console.commons.feature.IReportService;
			import org.mxhero.console.commons.feature.TimeUtils;
			
			import spark.events.IndexChangeEvent;
			
			private static const WEEK:String = "week";
			private static const TODAY:String = "today";
			
			private static const DATA_QUERY:String = "data.query";
			private static const EMAIL_QUERY:String = "email.query";
			
			private var _reportService:IReportService;
			
			private var selectedPeriod:String = TODAY;
			
			[Bindable]
			private var options:ArrayCollection;
			
			[Bindable]
			private var _data:ArrayCollection;
			
			private static const DAYSBEFORE:Number = 24*60*60*1000; 
			
			[Bindable]
			private static var sinceDate:Date;
			
			[Bindable]
			private var _emails:ArrayCollection;
			
			private var _emailsQuery:String  = "SELECT r0.record_sequence, r0.message_id, r0.from_recipients, r0.sender, r0.recipient, " 
				+" r0.to_recipients, r0.cc_recipients, r0.bcc_recipients, " 
				+" r0.subject, r0.phase, r0.bytes_size, r0.state, " 
				+" r0.state_reason, r0.insert_date " 
				+" FROM mail_records r0 " 
				+" WHERE r0.insert_date > CONVERT_TZ(?, ?, '+00:00' )  "
				+" AND EXISTS( SELECT 1 FROM mail_stats s "
				+" WHERE s.insert_date = r0.insert_date " 
				+" AND s.record_sequence = r0.record_sequence " 
				+" AND s.stat_key = 'org.mxhero.feature.initialsizelimiter' " 
				+" AND s.stat_value = 'true' ) ";
				
			
			private function createDataQuery(params:Array):String{
				var domain:String = _reportService.getDomain();
				var dataQuery:String ="";
				
				for (var i:Number=1;i<14;i++){
					dataQuery = dataQuery 	+" SELECT count(bytes_size) as `count`,minsize,maxsize " 
											+" FROM mail_records " 
											+" JOIN (SELECT IF("+(i-1)+">0,2*1024*POW(2,"+(i-1)+"),0)"
											+" as minsize, 2*1024*POW(2,"+i+")"
											+" as maxsize) as limits "
											+" WHERE bytes_size > limits.minsize AND bytes_size <= limits.maxsize "
											+" AND insert_date > CONVERT_TZ(?, ?, '+00:00' ) " ;
					params.push(dateFormatter.format(sinceDate),TimeUtils.offsetToTZ(sinceDate.getTimezoneOffset()));
					if(domain!=null && domain.length>0){
						dataQuery = dataQuery + " and (recipient_domain_id = ? or sender_domain_id = ?) ";
						params.push(domain,domain);
					}
					dataQuery = dataQuery + " UNION ";
					
				}

				dataQuery = dataQuery 	+" SELECT count(bytes_size) as `count`,minsize, IF(max(bytes_size)>2*1024*POW(2,14),max(bytes_size),2*1024*POW(2,14)) as maxsize " 
										+" FROM mail_records " 
										+" JOIN (SELECT 2*1024*POW(2,13)"
										+" as minsize) as limits "
										+" WHERE bytes_size > limits.minsize "
										+" AND insert_date > CONVERT_TZ(?, ?, '+00:00' ) " ;
				params.push(dateFormatter.format(sinceDate),TimeUtils.offsetToTZ(sinceDate.getTimezoneOffset()));

				if(domain!=null && domain.length>0){
					dataQuery = dataQuery + " and (recipient_domain_id = ? or sender_domain_id = ?) ";
					params.push(domain,domain);
				}
				return dataQuery;
			}
			
			public function setResult(queryId:String, result:*):void{
				if(queryId==DATA_QUERY){
					var dataArray:ArrayCollection = new ArrayCollection();
					for each(var dataRow:Object in result){
						dataArray.addItem({Qty:dataRow.count,Size:amountLabelFunction(dataRow.maxsize)});
					}
					this._data=dataArray;
				}else if(queryId==EMAIL_QUERY){
					var emailArray:ArrayCollection = new ArrayCollection();
					for each(var row:Object in result){
						emailArray.addItem({sequence:row.record_sequence,messageId:row.message_id,from:row.from_recipients,sender:row.sender
							,recipient:row.recipient,toRecipients:row.to_recipients
							,ccRecipients:row.cc_recipients,bccRecipients:row.bcc_recipients
							,subject:row.subject,phase:row.phase,bytesSize:row.bytes_size
							,state:row.state,stateReason:row.state_reason,insertDate:row.insert_date});
					}
					this._emails=emailArray;
				}
			}
			
			public function setReportService(service:IReportService):void{
				_reportService=service;
			}
			
			protected function creationCompleteHandler(event:FlexEvent):void
			{
				styleManager.loadStyleDeclarations("styles/mxhero.swf",true,false,ApplicationDomain.currentDomain);
				options = 
					new ArrayCollection([{label:resourceManager.getString('emailsizelimiter_report','last.week'),value:'week'}, 
						{label:resourceManager.getString('emailsizelimiter_report','today'),value:'today'}]);
				periodBar.selectedIndex=1;
			}
			
			
			public function refresh():void
			{
				sinceDate=new Date();
				if(selectedPeriod==TODAY){
					sinceDate.setTime(sinceDate.getTime()-DAYSBEFORE);
				}else if(selectedPeriod==WEEK){
					sinceDate.setTime(sinceDate.getTime()-7*DAYSBEFORE);
				}
				sinceDate.setHours(0,0,0,0);
				queryForData();
				queryForEmails();
			}
			
			private function queryForEmails():void{
				var domain:String = _reportService.getDomain();
				var params:Array = new Array();
				var emailsQuery:String = _emailsQuery;
				
				params.push(dateFormatter.format(sinceDate),TimeUtils.offsetToTZ(sinceDate.getTimezoneOffset()));

				if(domain!=null){
					params.push(domain,domain);
					emailsQuery = emailsQuery + " and (r0.recipient_domain_id = ? or r0.sender_domain_id = ?) ";
				}
				_reportService.processQuery(EMAIL_QUERY,emailsQuery,params,this);
				
			}
			
			private function queryForData():void{
				var params:Array = new Array();
				var emailsQuery:String = createDataQuery(params);
				_reportService.processQuery(DATA_QUERY,emailsQuery,params,this);
			}

			public function amountLabelFunction(size:Number):String {
				var value:Number = size;
				var ending:String = " B";
				if (value>1024){
					value=value/1024;
					ending=" KB";
					if(value>1024){
						value=value/1024;
						ending=" MB";
					}
				}
				value=(int(value*100)/100);
				return value+ending;
			}
			
			protected function buttonbar1_changeHandler(event:IndexChangeEvent):void
			{
				selectedPeriod=ButtonBar(event.target).selectedItem.value;
				refresh();
			}
		]]>
	</fx:Script>
		
	<fx:Metadata>
		[ResourceBundle("emailsizelimiter_report")]
	</fx:Metadata>
	
		<s:HGroup horizontalAlign="left" 
				  width="100%"
				  paddingRight="5"
				  paddingBottom="5"
				  paddingTop="40">
			<s:Label text="{resourceManager.getString('emailsizelimiter_report','title')}" 
					 fontWeight="bold" fontSize="16"
					 color="#FFFFFF"
					 textDecoration="underline"/>
			<mx:Spacer width="100%"/>
			<s:ButtonBar id="periodBar"
						 buttonMode="true" 
						 change="buttonbar1_changeHandler(event)"
						 dataProvider="{options}"
						 requireSelection="true"
						 selectedIndex="1"/>
		</s:HGroup>
		
		<s:VGroup width="100%" height="100%">
			
			<mx:ColumnChart id="linechart" color="0x323232" 
							height="50%" 
							width="100%"
							minHeight="240"
							showDataTips="true" 
							styleName="myChart"
							dataProvider="{_data}"
							axisTitleStyleName="axisTitles"
							backgroundElements="{bge}">
				
				<mx:filters>
					<s:DropShadowFilter
						distance="4"
						color="0x666666"
						alpha=".9"/>
				</mx:filters>
				
				<mx:horizontalAxis>
					<mx:CategoryAxis
						id="sizeAxis"
						categoryField="Size"
						displayName="{resourceManager.getString('emailsizelimiter_report','size.axis')}"
						title="{resourceManager.getString('emailsizelimiter_report','size.axis')}"
						/>
				</mx:horizontalAxis>
				
				<mx:verticalAxis>
					<mx:LinearAxis id="qtyAxis" 
								   displayName="{resourceManager.getString('emailsizelimiter_report','amount.axis')}"  
								   title="{resourceManager.getString('emailsizelimiter_report','amount.axis')}"
								   />
				</mx:verticalAxis>
				
				<mx:verticalAxisRenderers>
					<mx:AxisRenderer 
						axis="{qtyAxis}" 
						color="#FFFFFF" 
						fontSize="14"
						/>	 
				</mx:verticalAxisRenderers>
				
				<mx:horizontalAxisRenderers>
					<mx:AxisRenderer 
						axis="{sizeAxis}" 
						color="#FFFFFF" 
						fontSize="14"
						/> 
				</mx:horizontalAxisRenderers>

				<mx:fill>
					<mx:SolidColor color="0x66CCFF" alpha="0.0"/>
				</mx:fill>
				
				<mx:series>
					<mx:ColumnSeries xField="Size" 
									 yField="Qty" 
									 showDataEffect="{slideIn}" 
									 hideDataEffect="{slideOut}"
									 id="cserie"
									 >
						<mx:stroke>
							<s:SolidColorStroke color="0xfff797" caps="round" />
						</mx:stroke>
						<mx:fills>
							<mx:SolidColor color="0xfff797" alpha=".6"/>
						</mx:fills>
						<mx:filters>
							<s:DropShadowFilter
								distance="8"
								color="0x666666"
								alpha=".8"/>
						</mx:filters>
					</mx:ColumnSeries>
				</mx:series>
				
			</mx:ColumnChart>
			<s:Label text="{resourceManager.getString('emailsizelimiter_report','email.title')}" 
					 fontWeight="bold" fontSize="16"
					 paddingLeft="50"/>
			<s:HGroup width="100%" paddingLeft="50" height="50%">
				<mails:EmailsDataGrid  dataProvider="{_emails}" height="100%" width="100%"/>
			</s:HGroup>

		</s:VGroup>

</mx:Module>
