<?xml version="1.0" encoding="utf-8"?>
<!--
mxHero is a platform that intends to provide a single point of development 
and single point of distribution for email solutions and enhancements. It does this
by providing an extensible framework for rapid development and deployment of
email solutions.

Copyright (C) 2012  mxHero Inc.

This program is free software: you can redistribute it and/or modify
it under the terms of the GNU General Public License as published by
the Free Software Foundation, either version 3 of the License, or
(at your option) any later version.

This program is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU General Public License for more details.

You should have received a copy of the GNU General Public License
along with this program.  If not, see <http://www.gnu.org/licenses/>.
-->
<mx:Module xmlns:fx="http://ns.adobe.com/mxml/2009" 
		   xmlns:s="library://ns.adobe.com/flex/spark" 
		   xmlns:mx="library://ns.adobe.com/flex/mx" 
		   layout="vertical"
		   creationComplete="creationCompleteHandler(event)"
		   verticalGap="20"
		   paddingTop="30" 
		   xmlns:component="org.mxhero.console.commons.feature.component.*"
		   implements="org.mxhero.console.commons.feature.IFeature">
	
	<fx:Declarations>
	</fx:Declarations>
	
	<mx:states>
		<s:State name="default"/>
		<s:State name="explain"/>
	</mx:states>
	
	<fx:Script>
		<![CDATA[
			import mx.collections.ArrayCollection;
			import mx.events.FlexEvent;
			import mx.resources.ResourceManager;
			import mx.utils.StringUtil;
			
			import org.mxhero.console.commons.feature.FeatureRuleProperty;
			import org.mxhero.console.commons.feature.IFeature;
			import org.mxhero.console.commons.feature.PropertyHelper;
			import org.mxhero.console.commons.utils.RteHtmlParser;
			
			[Embed(source="/images/warning.png")] 
			[Bindable]
			public static var WARNING:Class;
			
			private var initialProperties:ArrayCollection;
			
			[Bindable]
			private var dateFormats:ArrayCollection = new ArrayCollection(['dd/mm','mm/dd']);
			
			protected function creationCompleteHandler(event:FlexEvent):void
			{
				styleManager.loadStyleDeclarations("styles/mxhero.swf",true,false,ApplicationDomain.currentDomain);
				loadData();
			}
			
			public function isValid():Boolean{
				return true;
			}
			
			public function setProperties(data:ArrayCollection):void{
				initialProperties=data;
			}
			
			private function loadData():void{
				if(initialProperties!=null){
					var formatProperty:FeatureRuleProperty = PropertyHelper.getProperty(initialProperties,"date.format");
					if(formatProperty!=null){
						if(formatProperty.propertyValue=='dd/mm'){
							dateFormatDdl.selectedIndex=0;
						}else{
							dateFormatDdl.selectedIndex=1;
						}
					}
				}
			}
			
			public function getProperties():ArrayCollection{
				var properties:ArrayCollection = new ArrayCollection();
				
				var property:FeatureRuleProperty = new FeatureRuleProperty();
				property = new FeatureRuleProperty();
				property.propertyKey = "locale";
				property.propertyValue = ResourceManager.getInstance().localeChain[0];;
				properties.addItem(property);
				
				property = new FeatureRuleProperty();
				property.propertyKey="date.format";
				property.propertyValue=dateFormatDdl.selectedItem;
				properties.addItem(property);
				
				return properties;
			}
			
			public function getValidationError():String{
				return "";
			}
			
			public function fixedTo():Boolean{
				return true;
			}
			
			public function fixedFrom():Boolean{
				return true;
			}
			
			public function fixedToValue():String{
				return "anyone";
			}
			
			public function fixedFromValue():String{
				return "owndomain";
			}
			
			protected function explainLink_clickHandler(event:MouseEvent):void
			{
				if(currentState=='default'){
					currentState='explain';
				}else{
					currentState='default';
				}
				
			}
			
			public function set applicationContext(ap:Object):void{
			}
			
			public function get applicationContext():Object{
				return null;
			}
		]]>
	</fx:Script>
	
	<fx:Metadata>
		[ResourceBundle("replytimeout")]
		[ResourceBundle("textLayout")]
	</fx:Metadata>

	<s:VGroup width="100%">
		
		<s:HGroup verticalAlign="bottom">
			<s:HGroup verticalAlign="bottom" paddingBottom="2">
				<mx:Image source="{WARNING}"/>
				<s:Label text="{resourceManager.getString('replytimeout','warning.message')}"/>
			</s:HGroup>
			<mx:LinkButton 	id="explainLink"
							label.default="{resourceManager.getString('replytimeout','label.explain')}" 
						   label.explain="{resourceManager.getString('replytimeout','label.hide')}"
						   click="explainLink_clickHandler(event)"
						   fontWeight="bold"
						   color="#70B2EE"
						   paddingLeft="0" 
						   paddingRight="0"
						   textRollOverColor="#FFFFFF"
						   textSelectedColor="#FFFFFF"/>
		</s:HGroup>
		<s:VGroup width="100%" excludeFrom="default" paddingLeft="30">
			<mx:Spacer height="10"/>
			<s:Label text="{resourceManager.getString('replytimeout','explain.client.support')}" 
					 fontSize="16" fontWeight="bold" textDecoration="underline"/>
			<mx:Text text="{resourceManager.getString('replytimeout','explain.client.support.text')}" 
					 width="100%" minWidth="500"/>
			<mx:Spacer/>
			<s:Label text="{resourceManager.getString('replytimeout','explain.subject.shortcode')}" 
					 fontSize="16" 
					 fontWeight="bold"
					 textDecoration="underline"/>
			<mx:Text text="{resourceManager.getString('replytimeout','explain.subject.shortcode.text')}" width="100%" minWidth="500"/>
		</s:VGroup>
	</s:VGroup>		
		<s:HGroup verticalAlign="bottom" paddingLeft="30">
			<s:Label text="{resourceManager.getString('replytimeout','date.format.label')}" fontWeight="bold"/>
			<s:DropDownList id="dateFormatDdl" 
							width="85" 
							selectedIndex="0"
							dataProvider="{dateFormats}"/>
		</s:HGroup>
		



</mx:Module>
