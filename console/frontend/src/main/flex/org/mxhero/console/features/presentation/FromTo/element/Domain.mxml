<?xml version="1.0" encoding="utf-8"?>
<s:HGroup xmlns:fx="http://ns.adobe.com/mxml/2009" 
		 xmlns:s="library://ns.adobe.com/flex/spark" 
		 xmlns:mx="library://ns.adobe.com/flex/mx" 
		 verticalAlign="middle"
		 gap="20" 
		 xmlns:IPE="org.mxhero.console.commons.component.IPE.*" 
		 xmlns:FromTo="org.mxhero.console.features.presentation.FromTo.*" 
		 xmlns:parsley="http://www.spicefactory.org/parsley" xmlns:element="org.mxhero.console.features.presentation.FromTo.element.*">

	<fx:Declarations>
		<parsley:Configure/>
		<mx:StringValidator id="requiredValidator" required="true"/>
	</fx:Declarations>
	<s:states>
		<s:State name="active"/>
		<s:State name="restricted"/>
		<s:State name="inactive"/>
	</s:states>
	
	<s:transitions>
		<s:Transition fromState="inactive" toState="active">
			<s:Fade target="{comboBox}" alphaFrom="0" alphaTo="1"/>
		</s:Transition>
		<s:Transition fromState="inactive" toState="restricted">
			<s:Fade target="{comboBox}" alphaFrom="0" alphaTo="1"/>
		</s:Transition>
	</s:transitions>
	
	<fx:Script>
		<![CDATA[
			import mx.collections.ArrayCollection;
			import mx.collections.Sort;
			import mx.collections.SortField;
			import mx.events.FlexEvent;
			import mx.events.StateChangeEvent;
			
			import org.mxhero.console.features.presentation.rule.RuleViewPM;
			
			[Inject]
			[Bindable]
			public var model:RuleViewPM;
			
			public var notifyChange:Function;

			public var parentStateFunction:Function;
			
			public var childState:String;
			
			protected function item_clickHandler(event:MouseEvent):void
			{
				if(parentStateFunction!=null){
					parentStateFunction(childState);
				}
			}
			
			protected function ipeComboBox_currentStateChangeHandler(event:StateChangeEvent):void
			{
				if(notifyChange!=null){
					notifyChange();
				}
			}

		]]>
	</fx:Script>
	
	<element:Item text="Domain" 
				 toolTip.inactive="Select a domain" 
				 toolTip.active="Clear this selection"
				 click="item_clickHandler(event)"
				 width="100"/>
	<s:BorderContainer id="comboBox" 
					   excludeFrom="inactive"
						backgroundColor="#7c7b7b"  
						borderVisible="true" 
						dropShadowVisible="true"
						borderStyle="solid"
						minHeight="0"
						buttonMode="true"
						borderColor="#cccccc" 
						cornerRadius="4"
						minWidth="220"
						height="100%">
		<s:VGroup height="100%" width="100%" 
				  horizontalAlign="center" 
				  verticalAlign="middle"
				  paddingLeft="5"
				  paddingRight="5">
			<IPE:IPEComboBox id="ipeComboBox"
							 subStyles="item"
							 currentState="edit"
							 dataProvider="{model.context.domains}"
							 enableItemSelectionCheck.active="false" 
							 enableItemSelectionCheck.restricted="false" 
							 enableLabelClickChangeStatus="true"
							 enableEnterKeyChangeStatus="true"
							 enableProviderFilter="true"
							 validator="{requiredValidator}"
							 labelTooltip="Click here to edit this field"
							 width="100%"
							 labelField="domain"
							 currentStateChange="ipeComboBox_currentStateChangeHandler(event)"/>					
		</s:VGroup>
	</s:BorderContainer>


</s:HGroup>
