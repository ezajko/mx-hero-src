<?xml version="1.0" encoding="utf-8"?>
<s:HGroup xmlns:fx="http://ns.adobe.com/mxml/2009" 
		 xmlns:s="library://ns.adobe.com/flex/spark" 
		 xmlns:mx="library://ns.adobe.com/flex/mx" 
		 gap="20" 
		 verticalAlign="middle" 
		 xmlns:FromTo="org.mxhero.console.commons.FromTo.*" 
		 xmlns:IPE="org.mxhero.console.commons.component.IPE.*" 
		 xmlns:parsley="http://www.spicefactory.org/parsley" 
		 xmlns:element="org.mxhero.console.commons.FromTo.element.*"
		 currentStateChange="currentStateChangeHandler(event)">
	
	<fx:Declarations>
		<mx:EmailValidator id="emailValidator" required="true"/>
		<parsley:Configure/>
	</fx:Declarations>
	
	<s:transitions>
		<s:Transition fromState="inactive" toState="active">
			<s:Fade target="{comboBox}" alphaFrom="0" alphaTo="1"/>
		</s:Transition>
		<s:Transition fromState="inactive" toState="restricted">
			<s:Fade target="{comboBox}" alphaFrom="0" alphaTo="1"/>
		</s:Transition>
	</s:transitions>
	
	<fx:Script>
		<![CDATA[
			import mx.collections.ArrayCollection;
			import mx.collections.Sort;
			import mx.collections.SortField;
			import mx.events.FlexEvent;
			import mx.events.StateChangeEvent;
			
			import org.mxhero.console.features.application.resources.RuleViewProperties;
			import org.mxhero.console.features.presentation.rule.RuleViewPM;
			import org.mxhero.console.frontend.domain.ApplicationContext;
			
			public var notifyChange:Function;
			
			public var parentStateFunction:Function;
			
			public var childState:String;
			
			[Bindable]
			private var sort:Sort=new Sort();

			[Inject]
			[Bindable]
			public var model:ApplicationContext;
			
			
			protected function item_clickHandler(event:MouseEvent):void
			{
				if(parentStateFunction!=null){
					parentStateFunction(childState);
				}
			}

			public function accountLabelFunction(item:Object):String{
				if(item!=null){
					if(item is String){
						return item as String;
					}
					return item.account+"@"+item.domain;
				}
				return "";
			}

			protected function ipeComboBox_currentStateChangeHandler(event:StateChangeEvent):void
			{
				if(notifyChange!=null){
					notifyChange();
				}
			}

			protected function currentStateChangeHandler(event:StateChangeEvent):void
			{
				if(event.newState=="inactive"){
					ipeComboBox.selectedItem=null;
					ipeComboBox.selectedLabel=null;
					ipeComboBox.comboBox.textInput.text=null;
					ipeComboBox.comboBox.selectedItem=null;
					ipeComboBox.switchState();
				}
			}
			
		]]>
	</fx:Script>
	
	<s:states>
		<s:State name="active"/>
		<s:State name="restricted"/>
		<s:State name="inactive"/>
	</s:states>
	
	<element:Item text="Individual"
				 toolTip.inactive="{resourceManager.getString(RuleViewProperties.NAME,RuleViewProperties.ITEM_SELECT_INDIVIDUAL_TOOLTIP)}" 
				 toolTip.active="{resourceManager.getString(RuleViewProperties.NAME,RuleViewProperties.ITEM_CLEAR_TOOLTIP)}"
				 click="item_clickHandler(event)"
				 width="120"/>
	
	<s:BorderContainer id="comboBox" 
					   excludeFrom="inactive"
					   backgroundColor="#7c7b7b"  
					   borderVisible="true" 
					   dropShadowVisible="true"
					   borderStyle="solid"
					   minHeight="0"
					   buttonMode="true"
					   borderColor="#cccccc" 
					   cornerRadius="4"
					   minWidth="260"
					   height="100%">
		<s:VGroup height="100%" width="100%" 
				  horizontalAlign="center" 
				  verticalAlign="middle"
				  paddingLeft="5"
				  paddingRight="5">
			<IPE:IPEComboBox id="ipeComboBox"
							 subStyles="item"
							 currentState="edit"
							 dataProvider="{model.accounts}"
							 enableItemSelectionCheck.active="false"
							 enableItemSelectionCheck.restricted="true"
							 enableLabelClickChangeStatus="true"
							 enableEnterKeyChangeStatus="true"
							 labelFunction="{accountLabelFunction}"
							 validator="{emailValidator}"
							 itemNotSelectedError="{resourceManager.getString(RuleViewProperties.NAME,RuleViewProperties.ITEM_INDIVIDUAL_NOT_VALID)}"
							 labelTooltip="{resourceManager.getString(RuleViewProperties.NAME,RuleViewProperties.ITEM_EDIT_TOOLTIP)}"
							 width="100%"
							 currentStateChange="ipeComboBox_currentStateChangeHandler(event)"/>					
		</s:VGroup>
	</s:BorderContainer>
</s:HGroup>
