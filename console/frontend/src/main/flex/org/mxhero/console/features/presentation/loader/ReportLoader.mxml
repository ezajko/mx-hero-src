<?xml version="1.0" encoding="utf-8"?>
<mx:ModuleLoader xmlns:fx="http://ns.adobe.com/mxml/2009" 
				 xmlns:s="library://ns.adobe.com/flex/spark" 
				 xmlns:mx="library://ns.adobe.com/flex/mx" 
			error="errorHandler(event)"
			progress="progressHandler(event)"
			loading="loadingHandler(event)"
			ready="readyHandler(event)"
			unload="unloadHandler(event)"
			horizontalAlign="center"
			verticalAlign="middle"
			xmlns:component="org.mxhero.console.commons.component.*"
			xmlns:component1="org.mxhero.console.commons.feature.component.*" 
			xmlns:parsley="http://www.spicefactory.org/parsley"
			creationComplete="moduleloader1_creationCompleteHandler(event)">
	
	
	<fx:Declarations>
		<parsley:Configure/>
	</fx:Declarations>
	
	<fx:Script>
		<![CDATA[
			import mx.events.FlexEvent;
			import mx.events.ModuleEvent;
			
			import org.mxhero.console.commons.feature.IReport;
			import org.mxhero.console.features.presentation.feature.FeatureViewPM;
			import org.mxhero.console.frontend.infrastructure.ReportServiceHandler;
			
			[Inject]
			[Bindable]
			public var reportService:ReportServiceHandler;
			
			private var reportModule:Object;
			
			[Inject]
			[Bindable]
			public var model:FeatureViewPM;
			
			protected function errorHandler(event:ModuleEvent):void
			{
				progress.label="error"
			}
			
			protected function progressHandler(event:ModuleEvent):void
			{
				if(progress!=null){
					progress.label=Math.round((event.bytesLoaded/event.bytesTotal) * 100) +"%";
				}
			}
			
			protected function loadingHandler(event:Event):void
			{
				currentState="loading";
				this.reportModule=null;
			}
			
			protected function readyHandler(event:ModuleEvent):void
			{
				this.reportModule= this.child;
				this.reportModule.setReportService(this.reportService);
				currentState="loaded";
				this.reportModule.refresh();
			}
			
			public function unload():void{
				this.reportModule=null;
				this.unloadModule();
			}
			
			protected function moduleloader1_creationCompleteHandler(event:FlexEvent):void
			{
				FeatureViewPM.unloadReport=this.unload;
			}


			protected function unloadHandler(event:ModuleEvent):void
			{
				this.reportModule=null;
			}

		]]>
	</fx:Script>
	
	<fx:Declarations>
		<parsley:Configure/>
	</fx:Declarations>
	
	<mx:states>
		<s:State name="loading"/>
		<s:State name="loaded"/>
	</mx:states>
	
	<mx:ProgressBar id="progress" 
					source="{this}" 
					excludeFrom="loaded" 
					color="#FFFFFF"
					labelPlacement="center"/>
</mx:ModuleLoader>
