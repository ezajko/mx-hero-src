<?xml version="1.0" encoding="utf-8"?>
<s:DataGrid xmlns:fx="http://ns.adobe.com/mxml/2009" 
			 xmlns:s="library://ns.adobe.com/flex/spark" 
			 xmlns:mx="library://ns.adobe.com/flex/mx"
			 width="100%" 
			 borderColor="0x336699">
	<fx:Script>
		<![CDATA[
			import mx.collections.ArrayCollection;
			import mx.rpc.events.FaultEvent;
			import mx.rpc.events.ResultEvent;
			
			import org.mxhero.console.mails.EmailsDataGridProperties;
			
			[Bindable]
			public var selectedEmailWindow:ShowEmail;

			protected function method1_resultHandler(event:ResultEvent):void
			{
				if(event.result is ArrayCollection){
					selectedEmailWindow.stats=event.result as ArrayCollection;
				}
			}
			
			protected function dateLabelFunction(item:Object,column:GridColumn):String{
				return creationDateFormatter.format(item.insertDate)+" "+creationHourFormatter.format(item.insertDate);
			}
			
			protected function method1_faultHandler(event:FaultEvent):void
			{
				trace(event);
				
			}
			
		]]>
	</fx:Script>
	
	<fx:Declarations>
		<mx:DateFormatter id="creationDateFormatter"/>
		
		<mx:DateFormatter id="creationHourFormatter"
						  formatString="JJ:NN:SS"
						  />
		<s:RemoteObject id="customReportService"
						destination="customReportService"
						showBusyCursor="true"
						channelSet="{channelSet}">
			<s:method name="getStats" result="method1_resultHandler(event)" fault="method1_faultHandler(event)"/>
		</s:RemoteObject>
		<s:ChannelSet id="channelSet">
			<s:channels>
				<s:AMFChannel uri="{'http://{server.name}:{server.port}/mxhero/messagebroker/flex-amf'}"/>
				<!--<s:AMFChannel uri="{'http://localhost:8080/mxhero/messagebroker/flex-amf'}"/>-->
			</s:channels>
		</s:ChannelSet>
	</fx:Declarations>
	
	<fx:Metadata>
		[ResourceBundle("emails_datagrid")]
	</fx:Metadata>
	
	<s:columns>						
		<s:ArrayList>
		<s:GridColumn  width="36" sortable="false" resizable="false" >
			<s:itemRenderer>
				<fx:Component>
					<s:GridItemRenderer width="100%">
						<s:layout>
							<s:VerticalLayout horizontalAlign="center" verticalAlign="middle"/>
						</s:layout>
						<fx:Script>
							<![CDATA[
								import mx.resources.IResourceManager;
								import mx.resources.ResourceManager;
								
								import org.mxhero.console.mails.CommonsImages;
								import org.mxhero.console.mails.EmailsDataGridProperties;
								
								[Bindable]
								private var rm:IResourceManager = ResourceManager.getInstance();
								
							]]>
						</fx:Script>
						<s:Group>
							<s:layout>
								<s:BasicLayout/>
							</s:layout>
							<s:Image 	visible="{data.state=='deliver'}"
										source="{CommonsImages.DELIVERED}" 
										buttonMode="false"
										toolTip="{rm.getString(EmailsDataGridProperties.NAME,EmailsDataGridProperties.DELIVERED_TOOLTIP)}"/>
							<s:Image 	visible="{data.state=='redirect'}"
											source="{CommonsImages.REDIRECT}" 
											buttonMode="false"
											toolTip="{rm.getString(EmailsDataGridProperties.NAME,EmailsDataGridProperties.REDIRECTED_TOOLTIP)}"/>
							<s:Image 	visible="{data.state=='drop'}"
										source="{CommonsImages.DROPPED}"
										buttonMode="false"
										toolTip="{rm.getString(EmailsDataGridProperties.NAME,EmailsDataGridProperties.DROPPED_TOOLTIP_START)}"/>						
							
						</s:Group>
					</s:GridItemRenderer>
				</fx:Component>
			</s:itemRenderer>
		</s:GridColumn>							
		<s:GridColumn dataField="insertDate" headerText="{resourceManager.getString(EmailsDataGridProperties.NAME,EmailsDataGridProperties.EMAIL_DATE_LABEL)}" 
						   labelFunction="dateLabelFunction"/>
		<s:GridColumn dataField="from" headerText="{resourceManager.getString(EmailsDataGridProperties.NAME,EmailsDataGridProperties.EMAIL_FROM_LABEL)}"/>
		<s:GridColumn dataField="recipient" headerText="{resourceManager.getString(EmailsDataGridProperties.NAME,EmailsDataGridProperties.EMAIL_TO_LABEL)}"/>
		<s:GridColumn dataField="subject" headerText="{resourceManager.getString(EmailsDataGridProperties.NAME,EmailsDataGridProperties.EMAIL_SUBJECT_LABEL)}"/>
		<s:GridColumn width="70" sortable="false" resizable="false">
			<s:itemRenderer>
				<fx:Component>
					<s:GridItemRenderer minHeight="0" minWidth="0">	
						<fx:Declarations>
							<mx:Glow id="glowOn"
									 alphaFrom="{minAlpha}"
									 alphaTo="{maxAlpha}"
									 blurXFrom="{minGlow}"
									 blurXTo="{maxGlow}"
									 blurYFrom="{minGlow}"
									 blurYTo="{maxGlow}"
									 color="{glowColor}"
									 duration="{duration}"/>
							
							<mx:Glow id="glowOff" 
									 alphaFrom="{maxAlpha}"
									 alphaTo="{minAlpha}"
									 blurXFrom="{maxGlow}"
									 blurXTo="{minGlow}"
									 blurYFrom="{maxGlow}"
									 blurYTo="{minGlow}"
									 color="{glowColor}"
									 duration="{duration}"/>
						</fx:Declarations>
						<fx:Script>
							<![CDATA[
								import mx.core.FlexGlobals;
								import mx.managers.PopUpManager;
								import mx.resources.IResourceManager;
								import mx.resources.ResourceManager;
								
								import org.mxhero.console.mails.EmailsDataGridProperties;
								import org.mxhero.console.mails.ShowEmail;
								
								[Bindable]
								private var rm:IResourceManager=ResourceManager.getInstance();
								
								[Bindable]
								public var glowColor:Number=0xFFFFFF;
								
								[Bindable]
								public var minGlow:Number=1.0;
								
								[Bindable]
								public var maxGlow:Number=10.0;
								
								[Bindable]
								public var minAlpha:Number=0.0;
								
								[Bindable]
								public var maxAlpha:Number=0.5;
								
								[Bindable]
								public var duration:Number=300;
								
								private var lastColor:*;
								
								private function showEmail():void{
									var emailWindow:ShowEmail = new ShowEmail();
									emailWindow.email=data;
									outerDocument.selectedEmailWindow=emailWindow;
									outerDocument.customReportService.getStats(data.insertDate.time,data.sequence);
									PopUpManager.addPopUp(emailWindow,outerDocument.parentDocument as DisplayObject,true);
									PopUpManager.centerPopUp(emailWindow);
								}
								
								private function onRollOverHandler():void{
									lastColor=childLabel.getStyle("color");
									childLabel.setStyle("color",glowColor);
								}
								
								private function onRollOutHandler():void{
									childLabel.setStyle("color",lastColor);
								}
								
							]]>
						</fx:Script>
						
						<s:Label id="childLabel"
								 text="{rm.getString(EmailsDataGridProperties.NAME,EmailsDataGridProperties.DETAILS_LABEL)}"
								 rollOver="{onRollOverHandler();}"
								 rollOut="{onRollOutHandler();}"
								 buttonMode="true"
								 mouseEnabled="true"
								 click="{showEmail()}"
								 rollOverEffect="{glowOn}"
								 toolTip="{rm.getString(EmailsDataGridProperties.NAME,EmailsDataGridProperties.DETAILS_TOOLTIP)}"
								 rollOutEffect="{glowOff}"
								 fontSize="14"
								 fontWeight="bold"
								 textAlign="left"
								 textDecoration="underline"
								 paddingBottom="4"
								 paddingLeft="4"
								 paddingRight="4"
								 paddingTop="4"
								 />
						
					</s:GridItemRenderer>
				</fx:Component>
			</s:itemRenderer>
		</s:GridColumn>
		</s:ArrayList>
	</s:columns>
</s:DataGrid>
