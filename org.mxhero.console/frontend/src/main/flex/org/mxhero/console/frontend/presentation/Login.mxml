<?xml version="1.0" encoding="utf-8"?>
<!--
mxHero is a platform that intends to provide a single point of development 
and single point of distribution for email solutions and enhancements. It does this
by providing an extensible framework for rapid development and deployment of
email solutions.

Copyright (C) 2012  mxHero Inc.

This program is free software: you can redistribute it and/or modify
it under the terms of the GNU General Public License as published by
the Free Software Foundation, either version 3 of the License, or
(at your option) any later version.

This program is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU General Public License for more details.

You should have received a copy of the GNU General Public License
along with this program.  If not, see <http://www.gnu.org/licenses/>.
-->
<s:Group xmlns:fx="http://ns.adobe.com/mxml/2009" 
		 xmlns:s="library://ns.adobe.com/flex/spark" 
		 xmlns:mx="library://ns.adobe.com/flex/mx" 
		 xmlns:parsley="http://www.spicefactory.org/parsley" 
		 xmlns:cairngorm="http://ns.adobe.com/cairngorm" 
		 xmlns:component="org.mxhero.console.commons.component.*" 
		 xmlns:component1="org.mxhero.console.commons.feature.component.*"
		 visible="{model.hasToAuthenticated}"
		 >
	
	<fx:Metadata>
		
	</fx:Metadata>
	
	<s:layout>
		<s:VerticalLayout horizontalAlign="center" verticalAlign="middle"/>
	</s:layout>
	
	<fx:Declarations>
		<parsley:Configure/>
		
		<cairngorm:ValidatorGroup id="forgotVg">
			<cairngorm:validators>
				<mx:EmailValidator id="mailV" required="true" property="text" source="{mailTi}"/>
			</cairngorm:validators>
		</cairngorm:ValidatorGroup>
		
		<cairngorm:ValidatorGroup id="loginVg">
			<cairngorm:validators>
				<mx:StringValidator id="useridV" required="true" property="text" source="{useridTi}" />
				<mx:StringValidator id="passwordV" required="true" property="text" source="{passwordTi}"/>
			</cairngorm:validators>
		</cairngorm:ValidatorGroup>
		
	</fx:Declarations>
	
	<fx:Script>
		<![CDATA[
			import org.mxhero.console.frontend.application.resources.LoginProperties;
			
			[Inject]
			[Bindable]
			public var model:LoginPM;
			
			protected function signInClick(event:MouseEvent):void{
				loginVg.validate();
				if (loginVg.isValid){
					model.login();
				}
			}
			
			protected function submitClick(event:MouseEvent):void
			{
				forgotVg.validate();
				if(forgotVg.isValid){
					model.recoverPassword();
				}
			}
		]]>
	</fx:Script>
	
	
	<!-- The Application class states property defines the view states.--> 
	<s:states> 
		<s:State name="default"/>    
		<s:State name="forgot"/> 
	</s:states> 
	
	<!-- Define the transition to animate the change of view state. --> 
	<s:transitions > 
		<s:Transition fromState="default" toState="forgot"> 
			<s:Sequence>
				<s:Fade target="{mailFi}" alphaFrom="1" alphaTo="0" duration="0"/>
				<s:Parallel duration="500"> 
					<s:Resize target="{loginPanel}"/>
					<s:Fade target="{mailFi}" alphaFrom="0" alphaTo="1" startDelay="100"/>
				</s:Parallel> 
			</s:Sequence>
		</s:Transition> 
		<s:Transition fromState="forgot" toState="default"> 
			<s:Sequence>
				<s:Fade target="{passwordFi}" alphaFrom="1" alphaTo="0" duration="0" />
				<s:Fade target="{useridFi}" alphaFrom="1" alphaTo="0" duration="0" />
				<s:Resize target="{loginPanel}" duration="200"/>
				<s:Parallel duration="300"> 
					<s:Fade target="{passwordFi}" alphaFrom="0" alphaTo="1"/>
					<s:Fade target="{useridFi}" alphaFrom="0" alphaTo="1"/>		
				</s:Parallel>
			</s:Sequence>
		</s:Transition> 
	</s:transitions> 
	
		<!-- Set title of the Panel container based on the view state.--> 
		<s:Panel id="loginPanel"
				 title.default="{resourceManager.getString(LoginProperties.NAME,LoginProperties.DEFAULT_TITLE)}" 
				 title.forgot="{resourceManager.getString(LoginProperties.NAME,LoginProperties.FORGOT_TITLE)}"
				 enabled="{!(model.isLoging||model.isRecovering)}"
				 skinClass="org.mxhero.console.commons.skin.BlueLinePanel"> 
			<s:layout> 
				<s:VerticalLayout horizontalAlign="center" verticalAlign="middle"/>
			</s:layout>
			<mx:Form id="loginForm" defaultButton="{submit}" > 
				<mx:FormItem id="mailFi" label="{resourceManager.getString(LoginProperties.NAME,LoginProperties.FORGOT_EMAIL_LABEL)}" includeIn="forgot"> 
					<s:TextInput id="mailTi" text="@{model.mail}" width="180" /> 
				</mx:FormItem>
				<mx:FormItem id="useridFi" label="{resourceManager.getString(LoginProperties.NAME,LoginProperties.DEFAULT_USERNAME_LABEL)}" includeIn="default"> 
					<s:TextInput id="useridTi" text="@{model.username}" width="180"/> 
				</mx:FormItem> 
				<mx:FormItem id="passwordFi" label="{resourceManager.getString(LoginProperties.NAME,LoginProperties.DEFAULT_PASSWORD_LABEL)}" includeIn="default" > 
					<s:TextInput id="passwordTi" text="@{model.password}" displayAsPassword="true"  width="180" /> 
				</mx:FormItem>
				<s:Group width="100%"> 
					<s:layout>
						<s:HorizontalLayout/>
					</s:layout>

					<mx:LinkButton label="{resourceManager.getString(LoginProperties.NAME,LoginProperties.FORGOT_LINK_LABEL)}"
								   includeIn="forgot" 
								   color="#FFFFFF"
								   textRollOverColor="#FFFFFF"
								   click="currentState=''"/>
					
					<mx:LinkButton id="changeLink"
								   includeIn="default" 
								   label="{resourceManager.getString(LoginProperties.NAME,LoginProperties.DEFAULT_LINK_LABEL)}" 
								   color="#FFFFFF"
								   textRollOverColor="#FFFFFF"
								   click="currentState='forgot'"/>
					<mx:Spacer width="100%"/>
					
					<s:Button id="submit" 
							  click.default="signInClick(event)" 
							  click.forgot="submitClick(event)"
							  label.default="{resourceManager.getString(LoginProperties.NAME,LoginProperties.DEFAULT_BUTTON_LABEL)}" 
							  label.forgot="{resourceManager.getString(LoginProperties.NAME,LoginProperties.FORGOT_BUTTON_LABEL)}"
							  buttonMode="true"/> 
				</s:Group>
			</mx:Form>
		</s:Panel>
	<component1:ReflectionManager id="reflectionManager" target="{loginPanel}" falloff="0.65" blurAmount="0.15"/>

</s:Group>
