<?xml version="1.0" encoding="utf-8"?>
<!--
mxHero is a platform that intends to provide a single point of development 
and single point of distribution for email solutions and enhancements. It does this
by providing an extensible framework for rapid development and deployment of
email solutions.

Copyright (C) 2012  mxHero Inc.

This program is free software: you can redistribute it and/or modify
it under the terms of the GNU General Public License as published by
the Free Software Foundation, either version 3 of the License, or
(at your option) any later version.

This program is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU General Public License for more details.

You should have received a copy of the GNU General Public License
along with this program.  If not, see <http://www.gnu.org/licenses/>.
-->
<s:TileGroup xmlns:fx="http://ns.adobe.com/mxml/2009" 
		 xmlns:s="library://ns.adobe.com/flex/spark" 
		 xmlns:mx="library://ns.adobe.com/flex/mx"
		 width="100%"
		 columnWidth="{model.columnsWidth}"
		 columnAlign="left"
		 horizontalGap="10">
	<fx:Declarations>
		<!-- Place non-visual elements (e.g., services, value objects) here -->
	</fx:Declarations>
	
	<fx:Script>
		<![CDATA[
			import mx.collections.ArrayCollection;
			import mx.collections.Sort;
			import mx.collections.SortField;
			import mx.controls.LinkButton;
			import mx.events.FlexEvent;

			[Bindable]
			public var model:CategoryListPM;
			
			private var _links:Object;

			[Bindable]
			public function get links():Object
			{
				return _links;
			}

			public function set links(value:Object):void
			{
				this.removeAllElements();
				if(value!=null){
					
					if(model.orderChilds){
						if(value is Array){
							value = new ArrayCollection(value as Array);
						}
						if(!(value is ArrayCollection)){
							return;
						}
						var dataSortField:SortField = new SortField();
						dataSortField.name="label";
						dataSortField.caseInsensitive=false;
						var alphaSort:Sort = new Sort();
						alphaSort.fields = [dataSortField];
						
						(value as ArrayCollection).sort=alphaSort;
						(value as ArrayCollection).refresh();
					}
					for(var child:Object in value){
						var childView:Child = new Child();
						childView.model=model;
						childView.child=value[child];
						this.addElement(childView);
					}
					this.invalidateDisplayList();
				}
				_links = value;
			}

		]]>
	</fx:Script>
</s:TileGroup>
