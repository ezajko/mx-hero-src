<?xml version="1.0" encoding="utf-8"?>
<s:SparkSkin xmlns:fx="http://ns.adobe.com/mxml/2009" xmlns:s="library://ns.adobe.com/flex/spark"
             xmlns:fb="http://ns.adobe.com/flashbuilder/2009" alpha.disabled=".5">

    <fx:Declarations>
        <fx:Object id="payload"/>
    </fx:Declarations>

    <fx:Metadata>
        <![CDATA[ 
        	[HostComponent("net.asciiworks.tlf.supportClasses.ContentDropDownList")]
    	]]>
    </fx:Metadata>

    <fx:Script fb:purpose="styling">
        <![CDATA[
            import mx.collections.ArrayCollection;

            import spark.events.DropDownEvent;

            /* Define the content fill items that should be colored by the "contentBackgroundColor" style. */
            static private const contentFill:Array = [ "bgFill" ];

            /**
             * @private
             */
            override public function get contentItems():Array {
                return contentFill
            }
            ;

            /**
             * @private
             */
            override protected function updateDisplayList(unscaledWidth:Number, unscaledHeight:Number):void {
                if (getStyle("borderVisible") == false) {
                    if (border)
                        border.visible = false;
                    if (background) {
                        background.left = background.top = background.right = background.bottom = 0;
                    }
                } else {
                    if (border)
                        border.visible = true;
                    if (background) {
                        background.left = background.top = background.right = background.bottom = 1;
                    }
                }

                if (dropShadow)
                    dropShadow.visible = getStyle("dropShadowVisible");

                openButton.setStyle("cornerRadius", getStyle("cornerRadius"));

                if (borderStroke) {
                    borderStroke.color = getStyle("borderColor");
                    borderStroke.alpha = getStyle("borderAlpha");
                }
                super.updateDisplayList(unscaledWidth, unscaledHeight);
            }

            private function updatePayload():void {
                payload.url = url.text;
                payload.destinationWindow = destinationWindowList.selectedItem.target;
            }
        ]]>
    </fx:Script>

    <s:states>
        <s:State name="normal"/>
        <s:State name="open"/>
        <s:State name="disabled"/>
    </s:states>

    <s:PopUpAnchor id="popUp" displayPopUp.normal="false" displayPopUp.open="true" includeIn="open"
                   left="0" right="0" top="0" bottom="0" itemDestructionPolicy="auto"
                   popUpPosition="below">

        <s:Group id="dropDown" width="200" height="100"
                 creationComplete="hostComponent.setHitAreaInclusions([dropDown]);">

            <s:RectangularDropShadow id="dropShadow" blurX="20" blurY="20" alpha="0.45" distance="7"
                                     angle="90" color="#000000" left="0" top="0" right="0"
                                     bottom="0"/>

            <s:Rect id="border" left="0" right="0" top="0" bottom="0">
                <s:stroke>
                    <s:SolidColorStroke id="borderStroke" weight="1"/>
                </s:stroke>
            </s:Rect>

            <s:Rect id="background" left="1" right="1" top="1" bottom="1">
                <s:fill>
                    <s:SolidColor id="bgFill" color="0xFFFFFF"/>
                </s:fill>
            </s:Rect>

            <s:Label top="17" left="24" text="URL:"/>
            <s:TextInput id="url" top="11" left="58" right="5" text="http://"
                         change="updatePayload()"/>

            <s:Label top="42" left="5" text="Open in:"/>
            <s:DropDownList id="destinationWindowList" top="36" left="58" right="15"
                            open="hostComponent.setHitAreaInclusions([dropDown,destinationWindowList.dropDown]);"
                            dataProvider="{new ArrayCollection([{name:'New Window',target:'_blank'},{name:'Current Window',target:'_self'}])}"
                            selectedIndex="0" labelField="name" change="updatePayload()"/>

            <s:Button id="submitButton" top="75" right="5"
                      enabled="{url.text != '' &amp;&amp; url.text != 'http://'}" label="Submit"
                      cornerRadius="0" height="16"/>

        </s:Group>
    </s:PopUpAnchor>

    <s:Button id="openButton" left="0" right="0" top="0" bottom="0" focusEnabled="false"
              skinClass="net.asciiworks.tlf.supportClasses.IconButtonSkin"
              content="{hostComponent.content}"/>

</s:SparkSkin>
